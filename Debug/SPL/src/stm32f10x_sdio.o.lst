   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_sdio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	SDIO_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	SDIO_DeInit:
  24              	.LFB29:
  25              		.file 1 "../SPL/src/stm32f10x_sdio.c"
   1:../SPL/src/stm32f10x_sdio.c **** /**
   2:../SPL/src/stm32f10x_sdio.c ****   ******************************************************************************
   3:../SPL/src/stm32f10x_sdio.c ****   * @file    stm32f10x_sdio.c
   4:../SPL/src/stm32f10x_sdio.c ****   * @author  MCD Application Team
   5:../SPL/src/stm32f10x_sdio.c ****   * @version V3.5.0
   6:../SPL/src/stm32f10x_sdio.c ****   * @date    11-March-2011
   7:../SPL/src/stm32f10x_sdio.c ****   * @brief   This file provides all the SDIO firmware functions.
   8:../SPL/src/stm32f10x_sdio.c ****   ******************************************************************************
   9:../SPL/src/stm32f10x_sdio.c ****   * @attention
  10:../SPL/src/stm32f10x_sdio.c ****   *
  11:../SPL/src/stm32f10x_sdio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../SPL/src/stm32f10x_sdio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../SPL/src/stm32f10x_sdio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../SPL/src/stm32f10x_sdio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../SPL/src/stm32f10x_sdio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../SPL/src/stm32f10x_sdio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../SPL/src/stm32f10x_sdio.c ****   *
  18:../SPL/src/stm32f10x_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../SPL/src/stm32f10x_sdio.c ****   ******************************************************************************
  20:../SPL/src/stm32f10x_sdio.c ****   */
  21:../SPL/src/stm32f10x_sdio.c **** 
  22:../SPL/src/stm32f10x_sdio.c **** /* Includes ------------------------------------------------------------------*/
  23:../SPL/src/stm32f10x_sdio.c **** #include "stm32f10x_sdio.h"
  24:../SPL/src/stm32f10x_sdio.c **** #include "stm32f10x_rcc.h"
  25:../SPL/src/stm32f10x_sdio.c **** 
  26:../SPL/src/stm32f10x_sdio.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../SPL/src/stm32f10x_sdio.c ****   * @{
  28:../SPL/src/stm32f10x_sdio.c ****   */
  29:../SPL/src/stm32f10x_sdio.c **** 
  30:../SPL/src/stm32f10x_sdio.c **** /** @defgroup SDIO 
  31:../SPL/src/stm32f10x_sdio.c ****   * @brief SDIO driver modules
  32:../SPL/src/stm32f10x_sdio.c ****   * @{
  33:../SPL/src/stm32f10x_sdio.c ****   */ 
  34:../SPL/src/stm32f10x_sdio.c **** 
  35:../SPL/src/stm32f10x_sdio.c **** /** @defgroup SDIO_Private_TypesDefinitions
  36:../SPL/src/stm32f10x_sdio.c ****   * @{
  37:../SPL/src/stm32f10x_sdio.c ****   */ 
  38:../SPL/src/stm32f10x_sdio.c **** 
  39:../SPL/src/stm32f10x_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
  40:../SPL/src/stm32f10x_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
  41:../SPL/src/stm32f10x_sdio.c **** 
  42:../SPL/src/stm32f10x_sdio.c **** /* --- CLKCR Register ---*/
  43:../SPL/src/stm32f10x_sdio.c **** 
  44:../SPL/src/stm32f10x_sdio.c **** /* Alias word address of CLKEN bit */
  45:../SPL/src/stm32f10x_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
  46:../SPL/src/stm32f10x_sdio.c **** #define CLKEN_BitNumber           0x08
  47:../SPL/src/stm32f10x_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
  48:../SPL/src/stm32f10x_sdio.c **** 
  49:../SPL/src/stm32f10x_sdio.c **** /* --- CMD Register ---*/
  50:../SPL/src/stm32f10x_sdio.c **** 
  51:../SPL/src/stm32f10x_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
  52:../SPL/src/stm32f10x_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
  53:../SPL/src/stm32f10x_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
  54:../SPL/src/stm32f10x_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
  55:../SPL/src/stm32f10x_sdio.c **** 
  56:../SPL/src/stm32f10x_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
  57:../SPL/src/stm32f10x_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
  58:../SPL/src/stm32f10x_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
  59:../SPL/src/stm32f10x_sdio.c **** 
  60:../SPL/src/stm32f10x_sdio.c **** /* Alias word address of NIEN bit */
  61:../SPL/src/stm32f10x_sdio.c **** #define NIEN_BitNumber            0x0D
  62:../SPL/src/stm32f10x_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
  63:../SPL/src/stm32f10x_sdio.c **** 
  64:../SPL/src/stm32f10x_sdio.c **** /* Alias word address of ATACMD bit */
  65:../SPL/src/stm32f10x_sdio.c **** #define ATACMD_BitNumber          0x0E
  66:../SPL/src/stm32f10x_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
  67:../SPL/src/stm32f10x_sdio.c **** 
  68:../SPL/src/stm32f10x_sdio.c **** /* --- DCTRL Register ---*/
  69:../SPL/src/stm32f10x_sdio.c **** 
  70:../SPL/src/stm32f10x_sdio.c **** /* Alias word address of DMAEN bit */
  71:../SPL/src/stm32f10x_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
  72:../SPL/src/stm32f10x_sdio.c **** #define DMAEN_BitNumber           0x03
  73:../SPL/src/stm32f10x_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
  74:../SPL/src/stm32f10x_sdio.c **** 
  75:../SPL/src/stm32f10x_sdio.c **** /* Alias word address of RWSTART bit */
  76:../SPL/src/stm32f10x_sdio.c **** #define RWSTART_BitNumber         0x08
  77:../SPL/src/stm32f10x_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
  78:../SPL/src/stm32f10x_sdio.c **** 
  79:../SPL/src/stm32f10x_sdio.c **** /* Alias word address of RWSTOP bit */
  80:../SPL/src/stm32f10x_sdio.c **** #define RWSTOP_BitNumber          0x09
  81:../SPL/src/stm32f10x_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
  82:../SPL/src/stm32f10x_sdio.c **** 
  83:../SPL/src/stm32f10x_sdio.c **** /* Alias word address of RWMOD bit */
  84:../SPL/src/stm32f10x_sdio.c **** #define RWMOD_BitNumber           0x0A
  85:../SPL/src/stm32f10x_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
  86:../SPL/src/stm32f10x_sdio.c **** 
  87:../SPL/src/stm32f10x_sdio.c **** /* Alias word address of SDIOEN bit */
  88:../SPL/src/stm32f10x_sdio.c **** #define SDIOEN_BitNumber          0x0B
  89:../SPL/src/stm32f10x_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
  90:../SPL/src/stm32f10x_sdio.c **** 
  91:../SPL/src/stm32f10x_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
  92:../SPL/src/stm32f10x_sdio.c **** 
  93:../SPL/src/stm32f10x_sdio.c **** /* --- CLKCR Register ---*/
  94:../SPL/src/stm32f10x_sdio.c **** 
  95:../SPL/src/stm32f10x_sdio.c **** /* CLKCR register clear mask */
  96:../SPL/src/stm32f10x_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
  97:../SPL/src/stm32f10x_sdio.c **** 
  98:../SPL/src/stm32f10x_sdio.c **** /* --- PWRCTRL Register ---*/
  99:../SPL/src/stm32f10x_sdio.c **** 
 100:../SPL/src/stm32f10x_sdio.c **** /* SDIO PWRCTRL Mask */
 101:../SPL/src/stm32f10x_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 102:../SPL/src/stm32f10x_sdio.c **** 
 103:../SPL/src/stm32f10x_sdio.c **** /* --- DCTRL Register ---*/
 104:../SPL/src/stm32f10x_sdio.c **** 
 105:../SPL/src/stm32f10x_sdio.c **** /* SDIO DCTRL Clear Mask */
 106:../SPL/src/stm32f10x_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 107:../SPL/src/stm32f10x_sdio.c **** 
 108:../SPL/src/stm32f10x_sdio.c **** /* --- CMD Register ---*/
 109:../SPL/src/stm32f10x_sdio.c **** 
 110:../SPL/src/stm32f10x_sdio.c **** /* CMD Register clear mask */
 111:../SPL/src/stm32f10x_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 112:../SPL/src/stm32f10x_sdio.c **** 
 113:../SPL/src/stm32f10x_sdio.c **** /* SDIO RESP Registers Address */
 114:../SPL/src/stm32f10x_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 115:../SPL/src/stm32f10x_sdio.c **** 
 116:../SPL/src/stm32f10x_sdio.c **** /**
 117:../SPL/src/stm32f10x_sdio.c ****   * @}
 118:../SPL/src/stm32f10x_sdio.c ****   */
 119:../SPL/src/stm32f10x_sdio.c **** 
 120:../SPL/src/stm32f10x_sdio.c **** /** @defgroup SDIO_Private_Defines
 121:../SPL/src/stm32f10x_sdio.c ****   * @{
 122:../SPL/src/stm32f10x_sdio.c ****   */
 123:../SPL/src/stm32f10x_sdio.c **** 
 124:../SPL/src/stm32f10x_sdio.c **** /**
 125:../SPL/src/stm32f10x_sdio.c ****   * @}
 126:../SPL/src/stm32f10x_sdio.c ****   */
 127:../SPL/src/stm32f10x_sdio.c **** 
 128:../SPL/src/stm32f10x_sdio.c **** /** @defgroup SDIO_Private_Macros
 129:../SPL/src/stm32f10x_sdio.c ****   * @{
 130:../SPL/src/stm32f10x_sdio.c ****   */
 131:../SPL/src/stm32f10x_sdio.c **** 
 132:../SPL/src/stm32f10x_sdio.c **** /**
 133:../SPL/src/stm32f10x_sdio.c ****   * @}
 134:../SPL/src/stm32f10x_sdio.c ****   */
 135:../SPL/src/stm32f10x_sdio.c **** 
 136:../SPL/src/stm32f10x_sdio.c **** /** @defgroup SDIO_Private_Variables
 137:../SPL/src/stm32f10x_sdio.c ****   * @{
 138:../SPL/src/stm32f10x_sdio.c ****   */
 139:../SPL/src/stm32f10x_sdio.c **** 
 140:../SPL/src/stm32f10x_sdio.c **** /**
 141:../SPL/src/stm32f10x_sdio.c ****   * @}
 142:../SPL/src/stm32f10x_sdio.c ****   */
 143:../SPL/src/stm32f10x_sdio.c **** 
 144:../SPL/src/stm32f10x_sdio.c **** /** @defgroup SDIO_Private_FunctionPrototypes
 145:../SPL/src/stm32f10x_sdio.c ****   * @{
 146:../SPL/src/stm32f10x_sdio.c ****   */
 147:../SPL/src/stm32f10x_sdio.c **** 
 148:../SPL/src/stm32f10x_sdio.c **** /**
 149:../SPL/src/stm32f10x_sdio.c ****   * @}
 150:../SPL/src/stm32f10x_sdio.c ****   */
 151:../SPL/src/stm32f10x_sdio.c **** 
 152:../SPL/src/stm32f10x_sdio.c **** /** @defgroup SDIO_Private_Functions
 153:../SPL/src/stm32f10x_sdio.c ****   * @{
 154:../SPL/src/stm32f10x_sdio.c ****   */
 155:../SPL/src/stm32f10x_sdio.c **** 
 156:../SPL/src/stm32f10x_sdio.c **** /**
 157:../SPL/src/stm32f10x_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 158:../SPL/src/stm32f10x_sdio.c ****   * @param  None
 159:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 160:../SPL/src/stm32f10x_sdio.c ****   */
 161:../SPL/src/stm32f10x_sdio.c **** void SDIO_DeInit(void)
 162:../SPL/src/stm32f10x_sdio.c **** {
  26              		.loc 1 162 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
 163:../SPL/src/stm32f10x_sdio.c ****   SDIO->POWER = 0x00000000;
  38              		.loc 1 163 0
  39 0004 124B     		ldr	r3, .L2
  40 0006 4FF00002 		mov	r2, #0
  41 000a 1A60     		str	r2, [r3, #0]
 164:../SPL/src/stm32f10x_sdio.c ****   SDIO->CLKCR = 0x00000000;
  42              		.loc 1 164 0
  43 000c 104B     		ldr	r3, .L2
  44 000e 4FF00002 		mov	r2, #0
  45 0012 5A60     		str	r2, [r3, #4]
 165:../SPL/src/stm32f10x_sdio.c ****   SDIO->ARG = 0x00000000;
  46              		.loc 1 165 0
  47 0014 0E4B     		ldr	r3, .L2
  48 0016 4FF00002 		mov	r2, #0
  49 001a 9A60     		str	r2, [r3, #8]
 166:../SPL/src/stm32f10x_sdio.c ****   SDIO->CMD = 0x00000000;
  50              		.loc 1 166 0
  51 001c 0C4B     		ldr	r3, .L2
  52 001e 4FF00002 		mov	r2, #0
  53 0022 DA60     		str	r2, [r3, #12]
 167:../SPL/src/stm32f10x_sdio.c ****   SDIO->DTIMER = 0x00000000;
  54              		.loc 1 167 0
  55 0024 0A4B     		ldr	r3, .L2
  56 0026 4FF00002 		mov	r2, #0
  57 002a 5A62     		str	r2, [r3, #36]
 168:../SPL/src/stm32f10x_sdio.c ****   SDIO->DLEN = 0x00000000;
  58              		.loc 1 168 0
  59 002c 084B     		ldr	r3, .L2
  60 002e 4FF00002 		mov	r2, #0
  61 0032 9A62     		str	r2, [r3, #40]
 169:../SPL/src/stm32f10x_sdio.c ****   SDIO->DCTRL = 0x00000000;
  62              		.loc 1 169 0
  63 0034 064B     		ldr	r3, .L2
  64 0036 4FF00002 		mov	r2, #0
  65 003a DA62     		str	r2, [r3, #44]
 170:../SPL/src/stm32f10x_sdio.c ****   SDIO->ICR = 0x00C007FF;
  66              		.loc 1 170 0
  67 003c 044B     		ldr	r3, .L2
  68 003e 054A     		ldr	r2, .L2+4
  69 0040 9A63     		str	r2, [r3, #56]
 171:../SPL/src/stm32f10x_sdio.c ****   SDIO->MASK = 0x00000000;
  70              		.loc 1 171 0
  71 0042 034B     		ldr	r3, .L2
  72 0044 4FF00002 		mov	r2, #0
  73 0048 DA63     		str	r2, [r3, #60]
 172:../SPL/src/stm32f10x_sdio.c **** }
  74              		.loc 1 172 0
  75 004a BD46     		mov	sp, r7
  76 004c 80BC     		pop	{r7}
  77 004e 7047     		bx	lr
  78              	.L3:
  79              		.align	2
  80              	.L2:
  81 0050 00800140 		.word	1073840128
  82 0054 FF07C000 		.word	12584959
  83              		.cfi_endproc
  84              	.LFE29:
  86              		.align	2
  87              		.global	SDIO_Init
  88              		.thumb
  89              		.thumb_func
  91              	SDIO_Init:
  92              	.LFB30:
 173:../SPL/src/stm32f10x_sdio.c **** 
 174:../SPL/src/stm32f10x_sdio.c **** /**
 175:../SPL/src/stm32f10x_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 176:../SPL/src/stm32f10x_sdio.c ****   *         parameters in the SDIO_InitStruct.
 177:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 178:../SPL/src/stm32f10x_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 179:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 180:../SPL/src/stm32f10x_sdio.c ****   */
 181:../SPL/src/stm32f10x_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 182:../SPL/src/stm32f10x_sdio.c **** {
  93              		.loc 1 182 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 16
  96              		@ frame_needed = 1, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98 0058 80B4     		push	{r7}
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 005a 85B0     		sub	sp, sp, #20
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 24
 105 005c 00AF     		add	r7, sp, #0
 106              	.LCFI4:
 107              		.cfi_def_cfa_register 7
 108 005e 7860     		str	r0, [r7, #4]
 183:../SPL/src/stm32f10x_sdio.c ****   uint32_t tmpreg = 0;
 109              		.loc 1 183 0
 110 0060 4FF00003 		mov	r3, #0
 111 0064 FB60     		str	r3, [r7, #12]
 184:../SPL/src/stm32f10x_sdio.c ****     
 185:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 186:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 187:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 188:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 189:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 190:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 191:../SPL/src/stm32f10x_sdio.c ****    
 192:../SPL/src/stm32f10x_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 193:../SPL/src/stm32f10x_sdio.c ****   /* Get the SDIO CLKCR value */
 194:../SPL/src/stm32f10x_sdio.c ****   tmpreg = SDIO->CLKCR;
 112              		.loc 1 194 0
 113 0066 134B     		ldr	r3, .L5
 114 0068 5B68     		ldr	r3, [r3, #4]
 115 006a FB60     		str	r3, [r7, #12]
 195:../SPL/src/stm32f10x_sdio.c ****   
 196:../SPL/src/stm32f10x_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 197:../SPL/src/stm32f10x_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
 116              		.loc 1 197 0
 117 006c FB68     		ldr	r3, [r7, #12]
 118 006e 23F4FD43 		bic	r3, r3, #32384
 119 0072 23F07F03 		bic	r3, r3, #127
 120 0076 FB60     		str	r3, [r7, #12]
 198:../SPL/src/stm32f10x_sdio.c ****   
 199:../SPL/src/stm32f10x_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 200:../SPL/src/stm32f10x_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 201:../SPL/src/stm32f10x_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 202:../SPL/src/stm32f10x_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 203:../SPL/src/stm32f10x_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 204:../SPL/src/stm32f10x_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 205:../SPL/src/stm32f10x_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 121              		.loc 1 205 0
 122 0078 7B68     		ldr	r3, [r7, #4]
 123 007a 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 124 007c 1A46     		mov	r2, r3
 125 007e 7B68     		ldr	r3, [r7, #4]
 126 0080 9B68     		ldr	r3, [r3, #8]
 127 0082 1A43     		orrs	r2, r2, r3
 206:../SPL/src/stm32f10x_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 128              		.loc 1 206 0
 129 0084 7B68     		ldr	r3, [r7, #4]
 130 0086 5B68     		ldr	r3, [r3, #4]
 205:../SPL/src/stm32f10x_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 131              		.loc 1 205 0
 132 0088 1A43     		orrs	r2, r2, r3
 133              		.loc 1 206 0
 134 008a 7B68     		ldr	r3, [r7, #4]
 135 008c DB68     		ldr	r3, [r3, #12]
 136 008e 1A43     		orrs	r2, r2, r3
 207:../SPL/src/stm32f10x_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
 137              		.loc 1 207 0
 138 0090 7B68     		ldr	r3, [r7, #4]
 139 0092 1B68     		ldr	r3, [r3, #0]
 206:../SPL/src/stm32f10x_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 140              		.loc 1 206 0
 141 0094 1A43     		orrs	r2, r2, r3
 142              		.loc 1 207 0
 143 0096 7B68     		ldr	r3, [r7, #4]
 144 0098 1B69     		ldr	r3, [r3, #16]
 145 009a 1343     		orrs	r3, r3, r2
 205:../SPL/src/stm32f10x_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 146              		.loc 1 205 0
 147 009c FA68     		ldr	r2, [r7, #12]
 148 009e 1343     		orrs	r3, r3, r2
 149 00a0 FB60     		str	r3, [r7, #12]
 208:../SPL/src/stm32f10x_sdio.c ****   
 209:../SPL/src/stm32f10x_sdio.c ****   /* Write to SDIO CLKCR */
 210:../SPL/src/stm32f10x_sdio.c ****   SDIO->CLKCR = tmpreg;
 150              		.loc 1 210 0
 151 00a2 044B     		ldr	r3, .L5
 152 00a4 FA68     		ldr	r2, [r7, #12]
 153 00a6 5A60     		str	r2, [r3, #4]
 211:../SPL/src/stm32f10x_sdio.c **** }
 154              		.loc 1 211 0
 155 00a8 07F11407 		add	r7, r7, #20
 156 00ac BD46     		mov	sp, r7
 157 00ae 80BC     		pop	{r7}
 158 00b0 7047     		bx	lr
 159              	.L6:
 160 00b2 00BF     		.align	2
 161              	.L5:
 162 00b4 00800140 		.word	1073840128
 163              		.cfi_endproc
 164              	.LFE30:
 166              		.align	2
 167              		.global	SDIO_StructInit
 168              		.thumb
 169              		.thumb_func
 171              	SDIO_StructInit:
 172              	.LFB31:
 212:../SPL/src/stm32f10x_sdio.c **** 
 213:../SPL/src/stm32f10x_sdio.c **** /**
 214:../SPL/src/stm32f10x_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 215:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 216:../SPL/src/stm32f10x_sdio.c ****   *   will be initialized.
 217:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 218:../SPL/src/stm32f10x_sdio.c ****   */
 219:../SPL/src/stm32f10x_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 220:../SPL/src/stm32f10x_sdio.c **** {
 173              		.loc 1 220 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 8
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178 00b8 80B4     		push	{r7}
 179              	.LCFI5:
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
 182 00ba 83B0     		sub	sp, sp, #12
 183              	.LCFI6:
 184              		.cfi_def_cfa_offset 16
 185 00bc 00AF     		add	r7, sp, #0
 186              	.LCFI7:
 187              		.cfi_def_cfa_register 7
 188 00be 7860     		str	r0, [r7, #4]
 221:../SPL/src/stm32f10x_sdio.c ****   /* SDIO_InitStruct members default value */
 222:../SPL/src/stm32f10x_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 189              		.loc 1 222 0
 190 00c0 7B68     		ldr	r3, [r7, #4]
 191 00c2 4FF00002 		mov	r2, #0
 192 00c6 1A75     		strb	r2, [r3, #20]
 223:../SPL/src/stm32f10x_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 193              		.loc 1 223 0
 194 00c8 7B68     		ldr	r3, [r7, #4]
 195 00ca 4FF00002 		mov	r2, #0
 196 00ce 1A60     		str	r2, [r3, #0]
 224:../SPL/src/stm32f10x_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 197              		.loc 1 224 0
 198 00d0 7B68     		ldr	r3, [r7, #4]
 199 00d2 4FF00002 		mov	r2, #0
 200 00d6 5A60     		str	r2, [r3, #4]
 225:../SPL/src/stm32f10x_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 201              		.loc 1 225 0
 202 00d8 7B68     		ldr	r3, [r7, #4]
 203 00da 4FF00002 		mov	r2, #0
 204 00de 9A60     		str	r2, [r3, #8]
 226:../SPL/src/stm32f10x_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 205              		.loc 1 226 0
 206 00e0 7B68     		ldr	r3, [r7, #4]
 207 00e2 4FF00002 		mov	r2, #0
 208 00e6 DA60     		str	r2, [r3, #12]
 227:../SPL/src/stm32f10x_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 209              		.loc 1 227 0
 210 00e8 7B68     		ldr	r3, [r7, #4]
 211 00ea 4FF00002 		mov	r2, #0
 212 00ee 1A61     		str	r2, [r3, #16]
 228:../SPL/src/stm32f10x_sdio.c **** }
 213              		.loc 1 228 0
 214 00f0 07F10C07 		add	r7, r7, #12
 215 00f4 BD46     		mov	sp, r7
 216 00f6 80BC     		pop	{r7}
 217 00f8 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE31:
 221 00fa 00BF     		.align	2
 222              		.global	SDIO_ClockCmd
 223              		.thumb
 224              		.thumb_func
 226              	SDIO_ClockCmd:
 227              	.LFB32:
 229:../SPL/src/stm32f10x_sdio.c **** 
 230:../SPL/src/stm32f10x_sdio.c **** /**
 231:../SPL/src/stm32f10x_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 232:../SPL/src/stm32f10x_sdio.c ****   * @param  NewState: new state of the SDIO Clock. This parameter can be: ENABLE or DISABLE.
 233:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 234:../SPL/src/stm32f10x_sdio.c ****   */
 235:../SPL/src/stm32f10x_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 236:../SPL/src/stm32f10x_sdio.c **** {
 228              		.loc 1 236 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 8
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233 00fc 80B4     		push	{r7}
 234              	.LCFI8:
 235              		.cfi_def_cfa_offset 4
 236              		.cfi_offset 7, -4
 237 00fe 83B0     		sub	sp, sp, #12
 238              	.LCFI9:
 239              		.cfi_def_cfa_offset 16
 240 0100 00AF     		add	r7, sp, #0
 241              	.LCFI10:
 242              		.cfi_def_cfa_register 7
 243 0102 0346     		mov	r3, r0
 244 0104 FB71     		strb	r3, [r7, #7]
 237:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 238:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 239:../SPL/src/stm32f10x_sdio.c ****   
 240:../SPL/src/stm32f10x_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 245              		.loc 1 240 0
 246 0106 044B     		ldr	r3, .L9
 247 0108 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 248 010a 1A60     		str	r2, [r3, #0]
 241:../SPL/src/stm32f10x_sdio.c **** }
 249              		.loc 1 241 0
 250 010c 07F10C07 		add	r7, r7, #12
 251 0110 BD46     		mov	sp, r7
 252 0112 80BC     		pop	{r7}
 253 0114 7047     		bx	lr
 254              	.L10:
 255 0116 00BF     		.align	2
 256              	.L9:
 257 0118 A0003042 		.word	1110442144
 258              		.cfi_endproc
 259              	.LFE32:
 261              		.align	2
 262              		.global	SDIO_SetPowerState
 263              		.thumb
 264              		.thumb_func
 266              	SDIO_SetPowerState:
 267              	.LFB33:
 242:../SPL/src/stm32f10x_sdio.c **** 
 243:../SPL/src/stm32f10x_sdio.c **** /**
 244:../SPL/src/stm32f10x_sdio.c ****   * @brief  Sets the power status of the controller.
 245:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 246:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be one of the following values:
 247:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_PowerState_OFF
 248:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_PowerState_ON
 249:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 250:../SPL/src/stm32f10x_sdio.c ****   */
 251:../SPL/src/stm32f10x_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 252:../SPL/src/stm32f10x_sdio.c **** {
 268              		.loc 1 252 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 8
 271              		@ frame_needed = 1, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 273 011c 80B4     		push	{r7}
 274              	.LCFI11:
 275              		.cfi_def_cfa_offset 4
 276              		.cfi_offset 7, -4
 277 011e 83B0     		sub	sp, sp, #12
 278              	.LCFI12:
 279              		.cfi_def_cfa_offset 16
 280 0120 00AF     		add	r7, sp, #0
 281              	.LCFI13:
 282              		.cfi_def_cfa_register 7
 283 0122 7860     		str	r0, [r7, #4]
 253:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 254:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 255:../SPL/src/stm32f10x_sdio.c ****   
 256:../SPL/src/stm32f10x_sdio.c ****   SDIO->POWER &= PWR_PWRCTRL_MASK;
 284              		.loc 1 256 0
 285 0124 084B     		ldr	r3, .L12
 286 0126 084A     		ldr	r2, .L12
 287 0128 1268     		ldr	r2, [r2, #0]
 288 012a 22F00302 		bic	r2, r2, #3
 289 012e 1A60     		str	r2, [r3, #0]
 257:../SPL/src/stm32f10x_sdio.c ****   SDIO->POWER |= SDIO_PowerState;
 290              		.loc 1 257 0
 291 0130 054B     		ldr	r3, .L12
 292 0132 054A     		ldr	r2, .L12
 293 0134 1168     		ldr	r1, [r2, #0]
 294 0136 7A68     		ldr	r2, [r7, #4]
 295 0138 0A43     		orrs	r2, r2, r1
 296 013a 1A60     		str	r2, [r3, #0]
 258:../SPL/src/stm32f10x_sdio.c **** }
 297              		.loc 1 258 0
 298 013c 07F10C07 		add	r7, r7, #12
 299 0140 BD46     		mov	sp, r7
 300 0142 80BC     		pop	{r7}
 301 0144 7047     		bx	lr
 302              	.L13:
 303 0146 00BF     		.align	2
 304              	.L12:
 305 0148 00800140 		.word	1073840128
 306              		.cfi_endproc
 307              	.LFE33:
 309              		.align	2
 310              		.global	SDIO_GetPowerState
 311              		.thumb
 312              		.thumb_func
 314              	SDIO_GetPowerState:
 315              	.LFB34:
 259:../SPL/src/stm32f10x_sdio.c **** 
 260:../SPL/src/stm32f10x_sdio.c **** /**
 261:../SPL/src/stm32f10x_sdio.c ****   * @brief  Gets the power status of the controller.
 262:../SPL/src/stm32f10x_sdio.c ****   * @param  None
 263:../SPL/src/stm32f10x_sdio.c ****   * @retval Power status of the controller. The returned value can
 264:../SPL/src/stm32f10x_sdio.c ****   *   be one of the following:
 265:../SPL/src/stm32f10x_sdio.c ****   * - 0x00: Power OFF
 266:../SPL/src/stm32f10x_sdio.c ****   * - 0x02: Power UP
 267:../SPL/src/stm32f10x_sdio.c ****   * - 0x03: Power ON 
 268:../SPL/src/stm32f10x_sdio.c ****   */
 269:../SPL/src/stm32f10x_sdio.c **** uint32_t SDIO_GetPowerState(void)
 270:../SPL/src/stm32f10x_sdio.c **** {
 316              		.loc 1 270 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 1, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 321 014c 80B4     		push	{r7}
 322              	.LCFI14:
 323              		.cfi_def_cfa_offset 4
 324              		.cfi_offset 7, -4
 325 014e 00AF     		add	r7, sp, #0
 326              	.LCFI15:
 327              		.cfi_def_cfa_register 7
 271:../SPL/src/stm32f10x_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 328              		.loc 1 271 0
 329 0150 034B     		ldr	r3, .L16
 330 0152 1B68     		ldr	r3, [r3, #0]
 331 0154 03F00303 		and	r3, r3, #3
 272:../SPL/src/stm32f10x_sdio.c **** }
 332              		.loc 1 272 0
 333 0158 1846     		mov	r0, r3
 334 015a BD46     		mov	sp, r7
 335 015c 80BC     		pop	{r7}
 336 015e 7047     		bx	lr
 337              	.L17:
 338              		.align	2
 339              	.L16:
 340 0160 00800140 		.word	1073840128
 341              		.cfi_endproc
 342              	.LFE34:
 344              		.align	2
 345              		.global	SDIO_ITConfig
 346              		.thumb
 347              		.thumb_func
 349              	SDIO_ITConfig:
 350              	.LFB35:
 273:../SPL/src/stm32f10x_sdio.c **** 
 274:../SPL/src/stm32f10x_sdio.c **** /**
 275:../SPL/src/stm32f10x_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 276:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 277:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be one or a combination of the following values:
 278:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 279:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 280:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 281:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 282:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 283:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 284:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 285:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 286:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 287:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 288:../SPL/src/stm32f10x_sdio.c ****   *                            bus mode interrupt
 289:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 290:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 291:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 292:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 293:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 294:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 295:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 296:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 297:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 298:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 299:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 300:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 301:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 302:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 303:../SPL/src/stm32f10x_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 304:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be: ENABLE or DISABLE.
 305:../SPL/src/stm32f10x_sdio.c ****   * @retval None 
 306:../SPL/src/stm32f10x_sdio.c ****   */
 307:../SPL/src/stm32f10x_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 308:../SPL/src/stm32f10x_sdio.c **** {
 351              		.loc 1 308 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 8
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356 0164 80B4     		push	{r7}
 357              	.LCFI16:
 358              		.cfi_def_cfa_offset 4
 359              		.cfi_offset 7, -4
 360 0166 83B0     		sub	sp, sp, #12
 361              	.LCFI17:
 362              		.cfi_def_cfa_offset 16
 363 0168 00AF     		add	r7, sp, #0
 364              	.LCFI18:
 365              		.cfi_def_cfa_register 7
 366 016a 7860     		str	r0, [r7, #4]
 367 016c 0B46     		mov	r3, r1
 368 016e FB70     		strb	r3, [r7, #3]
 309:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 310:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 311:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 312:../SPL/src/stm32f10x_sdio.c ****   
 313:../SPL/src/stm32f10x_sdio.c ****   if (NewState != DISABLE)
 369              		.loc 1 313 0
 370 0170 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 371 0172 002B     		cmp	r3, #0
 372 0174 06D0     		beq	.L19
 314:../SPL/src/stm32f10x_sdio.c ****   {
 315:../SPL/src/stm32f10x_sdio.c ****     /* Enable the SDIO interrupts */
 316:../SPL/src/stm32f10x_sdio.c ****     SDIO->MASK |= SDIO_IT;
 373              		.loc 1 316 0
 374 0176 0A4B     		ldr	r3, .L21
 375 0178 094A     		ldr	r2, .L21
 376 017a D16B     		ldr	r1, [r2, #60]
 377 017c 7A68     		ldr	r2, [r7, #4]
 378 017e 0A43     		orrs	r2, r2, r1
 379 0180 DA63     		str	r2, [r3, #60]
 380 0182 07E0     		b	.L18
 381              	.L19:
 317:../SPL/src/stm32f10x_sdio.c ****   }
 318:../SPL/src/stm32f10x_sdio.c ****   else
 319:../SPL/src/stm32f10x_sdio.c ****   {
 320:../SPL/src/stm32f10x_sdio.c ****     /* Disable the SDIO interrupts */
 321:../SPL/src/stm32f10x_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 382              		.loc 1 321 0
 383 0184 064B     		ldr	r3, .L21
 384 0186 064A     		ldr	r2, .L21
 385 0188 D16B     		ldr	r1, [r2, #60]
 386 018a 7A68     		ldr	r2, [r7, #4]
 387 018c 6FEA0202 		mvn	r2, r2
 388 0190 0A40     		ands	r2, r2, r1
 389 0192 DA63     		str	r2, [r3, #60]
 390              	.L18:
 322:../SPL/src/stm32f10x_sdio.c ****   } 
 323:../SPL/src/stm32f10x_sdio.c **** }
 391              		.loc 1 323 0
 392 0194 07F10C07 		add	r7, r7, #12
 393 0198 BD46     		mov	sp, r7
 394 019a 80BC     		pop	{r7}
 395 019c 7047     		bx	lr
 396              	.L22:
 397 019e 00BF     		.align	2
 398              	.L21:
 399 01a0 00800140 		.word	1073840128
 400              		.cfi_endproc
 401              	.LFE35:
 403              		.align	2
 404              		.global	SDIO_DMACmd
 405              		.thumb
 406              		.thumb_func
 408              	SDIO_DMACmd:
 409              	.LFB36:
 324:../SPL/src/stm32f10x_sdio.c **** 
 325:../SPL/src/stm32f10x_sdio.c **** /**
 326:../SPL/src/stm32f10x_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 327:../SPL/src/stm32f10x_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 328:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be: ENABLE or DISABLE.
 329:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 330:../SPL/src/stm32f10x_sdio.c ****   */
 331:../SPL/src/stm32f10x_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 332:../SPL/src/stm32f10x_sdio.c **** {
 410              		.loc 1 332 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 8
 413              		@ frame_needed = 1, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415 01a4 80B4     		push	{r7}
 416              	.LCFI19:
 417              		.cfi_def_cfa_offset 4
 418              		.cfi_offset 7, -4
 419 01a6 83B0     		sub	sp, sp, #12
 420              	.LCFI20:
 421              		.cfi_def_cfa_offset 16
 422 01a8 00AF     		add	r7, sp, #0
 423              	.LCFI21:
 424              		.cfi_def_cfa_register 7
 425 01aa 0346     		mov	r3, r0
 426 01ac FB71     		strb	r3, [r7, #7]
 333:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 334:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 335:../SPL/src/stm32f10x_sdio.c ****   
 336:../SPL/src/stm32f10x_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 427              		.loc 1 336 0
 428 01ae 044B     		ldr	r3, .L24
 429 01b0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 430 01b2 1A60     		str	r2, [r3, #0]
 337:../SPL/src/stm32f10x_sdio.c **** }
 431              		.loc 1 337 0
 432 01b4 07F10C07 		add	r7, r7, #12
 433 01b8 BD46     		mov	sp, r7
 434 01ba 80BC     		pop	{r7}
 435 01bc 7047     		bx	lr
 436              	.L25:
 437 01be 00BF     		.align	2
 438              	.L24:
 439 01c0 8C053042 		.word	1110443404
 440              		.cfi_endproc
 441              	.LFE36:
 443              		.align	2
 444              		.global	SDIO_SendCommand
 445              		.thumb
 446              		.thumb_func
 448              	SDIO_SendCommand:
 449              	.LFB37:
 338:../SPL/src/stm32f10x_sdio.c **** 
 339:../SPL/src/stm32f10x_sdio.c **** /**
 340:../SPL/src/stm32f10x_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 341:../SPL/src/stm32f10x_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 342:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 343:../SPL/src/stm32f10x_sdio.c ****   *         structure that contains the configuration information for the SDIO command.
 344:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 345:../SPL/src/stm32f10x_sdio.c ****   */
 346:../SPL/src/stm32f10x_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 347:../SPL/src/stm32f10x_sdio.c **** {
 450              		.loc 1 347 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 16
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455 01c4 80B4     		push	{r7}
 456              	.LCFI22:
 457              		.cfi_def_cfa_offset 4
 458              		.cfi_offset 7, -4
 459 01c6 85B0     		sub	sp, sp, #20
 460              	.LCFI23:
 461              		.cfi_def_cfa_offset 24
 462 01c8 00AF     		add	r7, sp, #0
 463              	.LCFI24:
 464              		.cfi_def_cfa_register 7
 465 01ca 7860     		str	r0, [r7, #4]
 348:../SPL/src/stm32f10x_sdio.c ****   uint32_t tmpreg = 0;
 466              		.loc 1 348 0
 467 01cc 4FF00003 		mov	r3, #0
 468 01d0 FB60     		str	r3, [r7, #12]
 349:../SPL/src/stm32f10x_sdio.c ****   
 350:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 351:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 352:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 353:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 354:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 355:../SPL/src/stm32f10x_sdio.c ****   
 356:../SPL/src/stm32f10x_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 357:../SPL/src/stm32f10x_sdio.c ****   /* Set the SDIO Argument value */
 358:../SPL/src/stm32f10x_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 469              		.loc 1 358 0
 470 01d2 114B     		ldr	r3, .L27
 471 01d4 7A68     		ldr	r2, [r7, #4]
 472 01d6 1268     		ldr	r2, [r2, #0]
 473 01d8 9A60     		str	r2, [r3, #8]
 359:../SPL/src/stm32f10x_sdio.c ****   
 360:../SPL/src/stm32f10x_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 361:../SPL/src/stm32f10x_sdio.c ****   /* Get the SDIO CMD value */
 362:../SPL/src/stm32f10x_sdio.c ****   tmpreg = SDIO->CMD;
 474              		.loc 1 362 0
 475 01da 0F4B     		ldr	r3, .L27
 476 01dc DB68     		ldr	r3, [r3, #12]
 477 01de FB60     		str	r3, [r7, #12]
 363:../SPL/src/stm32f10x_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 364:../SPL/src/stm32f10x_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 478              		.loc 1 364 0
 479 01e0 FB68     		ldr	r3, [r7, #12]
 480 01e2 23F4FF63 		bic	r3, r3, #2040
 481 01e6 23F00703 		bic	r3, r3, #7
 482 01ea FB60     		str	r3, [r7, #12]
 365:../SPL/src/stm32f10x_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 366:../SPL/src/stm32f10x_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 367:../SPL/src/stm32f10x_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 368:../SPL/src/stm32f10x_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 369:../SPL/src/stm32f10x_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 483              		.loc 1 369 0
 484 01ec 7B68     		ldr	r3, [r7, #4]
 485 01ee 5A68     		ldr	r2, [r3, #4]
 486 01f0 7B68     		ldr	r3, [r7, #4]
 487 01f2 9B68     		ldr	r3, [r3, #8]
 488 01f4 1A43     		orrs	r2, r2, r3
 370:../SPL/src/stm32f10x_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 489              		.loc 1 370 0
 490 01f6 7B68     		ldr	r3, [r7, #4]
 491 01f8 DB68     		ldr	r3, [r3, #12]
 492 01fa 1A43     		orrs	r2, r2, r3
 493 01fc 7B68     		ldr	r3, [r7, #4]
 494 01fe 1B69     		ldr	r3, [r3, #16]
 495 0200 1343     		orrs	r3, r3, r2
 369:../SPL/src/stm32f10x_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 496              		.loc 1 369 0
 497 0202 FA68     		ldr	r2, [r7, #12]
 498 0204 1343     		orrs	r3, r3, r2
 499 0206 FB60     		str	r3, [r7, #12]
 371:../SPL/src/stm32f10x_sdio.c ****   
 372:../SPL/src/stm32f10x_sdio.c ****   /* Write to SDIO CMD */
 373:../SPL/src/stm32f10x_sdio.c ****   SDIO->CMD = tmpreg;
 500              		.loc 1 373 0
 501 0208 034B     		ldr	r3, .L27
 502 020a FA68     		ldr	r2, [r7, #12]
 503 020c DA60     		str	r2, [r3, #12]
 374:../SPL/src/stm32f10x_sdio.c **** }
 504              		.loc 1 374 0
 505 020e 07F11407 		add	r7, r7, #20
 506 0212 BD46     		mov	sp, r7
 507 0214 80BC     		pop	{r7}
 508 0216 7047     		bx	lr
 509              	.L28:
 510              		.align	2
 511              	.L27:
 512 0218 00800140 		.word	1073840128
 513              		.cfi_endproc
 514              	.LFE37:
 516              		.align	2
 517              		.global	SDIO_CmdStructInit
 518              		.thumb
 519              		.thumb_func
 521              	SDIO_CmdStructInit:
 522              	.LFB38:
 375:../SPL/src/stm32f10x_sdio.c **** 
 376:../SPL/src/stm32f10x_sdio.c **** /**
 377:../SPL/src/stm32f10x_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 378:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 379:../SPL/src/stm32f10x_sdio.c ****   *         structure which will be initialized.
 380:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 381:../SPL/src/stm32f10x_sdio.c ****   */
 382:../SPL/src/stm32f10x_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 383:../SPL/src/stm32f10x_sdio.c **** {
 523              		.loc 1 383 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 8
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528 021c 80B4     		push	{r7}
 529              	.LCFI25:
 530              		.cfi_def_cfa_offset 4
 531              		.cfi_offset 7, -4
 532 021e 83B0     		sub	sp, sp, #12
 533              	.LCFI26:
 534              		.cfi_def_cfa_offset 16
 535 0220 00AF     		add	r7, sp, #0
 536              	.LCFI27:
 537              		.cfi_def_cfa_register 7
 538 0222 7860     		str	r0, [r7, #4]
 384:../SPL/src/stm32f10x_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 385:../SPL/src/stm32f10x_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 539              		.loc 1 385 0
 540 0224 7B68     		ldr	r3, [r7, #4]
 541 0226 4FF00002 		mov	r2, #0
 542 022a 1A60     		str	r2, [r3, #0]
 386:../SPL/src/stm32f10x_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 543              		.loc 1 386 0
 544 022c 7B68     		ldr	r3, [r7, #4]
 545 022e 4FF00002 		mov	r2, #0
 546 0232 5A60     		str	r2, [r3, #4]
 387:../SPL/src/stm32f10x_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 547              		.loc 1 387 0
 548 0234 7B68     		ldr	r3, [r7, #4]
 549 0236 4FF00002 		mov	r2, #0
 550 023a 9A60     		str	r2, [r3, #8]
 388:../SPL/src/stm32f10x_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 551              		.loc 1 388 0
 552 023c 7B68     		ldr	r3, [r7, #4]
 553 023e 4FF00002 		mov	r2, #0
 554 0242 DA60     		str	r2, [r3, #12]
 389:../SPL/src/stm32f10x_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 555              		.loc 1 389 0
 556 0244 7B68     		ldr	r3, [r7, #4]
 557 0246 4FF00002 		mov	r2, #0
 558 024a 1A61     		str	r2, [r3, #16]
 390:../SPL/src/stm32f10x_sdio.c **** }
 559              		.loc 1 390 0
 560 024c 07F10C07 		add	r7, r7, #12
 561 0250 BD46     		mov	sp, r7
 562 0252 80BC     		pop	{r7}
 563 0254 7047     		bx	lr
 564              		.cfi_endproc
 565              	.LFE38:
 567 0256 00BF     		.align	2
 568              		.global	SDIO_GetCommandResponse
 569              		.thumb
 570              		.thumb_func
 572              	SDIO_GetCommandResponse:
 573              	.LFB39:
 391:../SPL/src/stm32f10x_sdio.c **** 
 392:../SPL/src/stm32f10x_sdio.c **** /**
 393:../SPL/src/stm32f10x_sdio.c ****   * @brief  Returns command index of last command for which response received.
 394:../SPL/src/stm32f10x_sdio.c ****   * @param  None
 395:../SPL/src/stm32f10x_sdio.c ****   * @retval Returns the command index of the last command response received.
 396:../SPL/src/stm32f10x_sdio.c ****   */
 397:../SPL/src/stm32f10x_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 398:../SPL/src/stm32f10x_sdio.c **** {
 574              		.loc 1 398 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579 0258 80B4     		push	{r7}
 580              	.LCFI28:
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 7, -4
 583 025a 00AF     		add	r7, sp, #0
 584              	.LCFI29:
 585              		.cfi_def_cfa_register 7
 399:../SPL/src/stm32f10x_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 586              		.loc 1 399 0
 587 025c 034B     		ldr	r3, .L32
 588 025e 1B69     		ldr	r3, [r3, #16]
 589 0260 DBB2     		uxtb	r3, r3
 400:../SPL/src/stm32f10x_sdio.c **** }
 590              		.loc 1 400 0
 591 0262 1846     		mov	r0, r3
 592 0264 BD46     		mov	sp, r7
 593 0266 80BC     		pop	{r7}
 594 0268 7047     		bx	lr
 595              	.L33:
 596 026a 00BF     		.align	2
 597              	.L32:
 598 026c 00800140 		.word	1073840128
 599              		.cfi_endproc
 600              	.LFE39:
 602              		.align	2
 603              		.global	SDIO_GetResponse
 604              		.thumb
 605              		.thumb_func
 607              	SDIO_GetResponse:
 608              	.LFB40:
 401:../SPL/src/stm32f10x_sdio.c **** 
 402:../SPL/src/stm32f10x_sdio.c **** /**
 403:../SPL/src/stm32f10x_sdio.c ****   * @brief  Returns response received from the card for the last command.
 404:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 405:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be one of the following values:
 406:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_RESP1: Response Register 1
 407:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_RESP2: Response Register 2
 408:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_RESP3: Response Register 3
 409:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_RESP4: Response Register 4
 410:../SPL/src/stm32f10x_sdio.c ****   * @retval The Corresponding response register value.
 411:../SPL/src/stm32f10x_sdio.c ****   */
 412:../SPL/src/stm32f10x_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 413:../SPL/src/stm32f10x_sdio.c **** {
 609              		.loc 1 413 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 16
 612              		@ frame_needed = 1, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 614 0270 80B4     		push	{r7}
 615              	.LCFI30:
 616              		.cfi_def_cfa_offset 4
 617              		.cfi_offset 7, -4
 618 0272 85B0     		sub	sp, sp, #20
 619              	.LCFI31:
 620              		.cfi_def_cfa_offset 24
 621 0274 00AF     		add	r7, sp, #0
 622              	.LCFI32:
 623              		.cfi_def_cfa_register 7
 624 0276 7860     		str	r0, [r7, #4]
 414:../SPL/src/stm32f10x_sdio.c ****   __IO uint32_t tmp = 0;
 625              		.loc 1 414 0
 626 0278 4FF00003 		mov	r3, #0
 627 027c FB60     		str	r3, [r7, #12]
 415:../SPL/src/stm32f10x_sdio.c **** 
 416:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 417:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 418:../SPL/src/stm32f10x_sdio.c **** 
 419:../SPL/src/stm32f10x_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 628              		.loc 1 419 0
 629 027e 7A68     		ldr	r2, [r7, #4]
 630 0280 054B     		ldr	r3, .L36
 631 0282 D318     		adds	r3, r2, r3
 632 0284 FB60     		str	r3, [r7, #12]
 420:../SPL/src/stm32f10x_sdio.c ****   
 421:../SPL/src/stm32f10x_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 633              		.loc 1 421 0
 634 0286 FB68     		ldr	r3, [r7, #12]
 635 0288 1B68     		ldr	r3, [r3, #0]
 422:../SPL/src/stm32f10x_sdio.c **** }
 636              		.loc 1 422 0
 637 028a 1846     		mov	r0, r3
 638 028c 07F11407 		add	r7, r7, #20
 639 0290 BD46     		mov	sp, r7
 640 0292 80BC     		pop	{r7}
 641 0294 7047     		bx	lr
 642              	.L37:
 643 0296 00BF     		.align	2
 644              	.L36:
 645 0298 14800140 		.word	1073840148
 646              		.cfi_endproc
 647              	.LFE40:
 649              		.align	2
 650              		.global	SDIO_DataConfig
 651              		.thumb
 652              		.thumb_func
 654              	SDIO_DataConfig:
 655              	.LFB41:
 423:../SPL/src/stm32f10x_sdio.c **** 
 424:../SPL/src/stm32f10x_sdio.c **** /**
 425:../SPL/src/stm32f10x_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 426:../SPL/src/stm32f10x_sdio.c ****   *   parameters in the SDIO_DataInitStruct.
 427:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure that
 428:../SPL/src/stm32f10x_sdio.c ****   *   contains the configuration information for the SDIO command.
 429:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 430:../SPL/src/stm32f10x_sdio.c ****   */
 431:../SPL/src/stm32f10x_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 432:../SPL/src/stm32f10x_sdio.c **** {
 656              		.loc 1 432 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 16
 659              		@ frame_needed = 1, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661 029c 80B4     		push	{r7}
 662              	.LCFI33:
 663              		.cfi_def_cfa_offset 4
 664              		.cfi_offset 7, -4
 665 029e 85B0     		sub	sp, sp, #20
 666              	.LCFI34:
 667              		.cfi_def_cfa_offset 24
 668 02a0 00AF     		add	r7, sp, #0
 669              	.LCFI35:
 670              		.cfi_def_cfa_register 7
 671 02a2 7860     		str	r0, [r7, #4]
 433:../SPL/src/stm32f10x_sdio.c ****   uint32_t tmpreg = 0;
 672              		.loc 1 433 0
 673 02a4 4FF00003 		mov	r3, #0
 674 02a8 FB60     		str	r3, [r7, #12]
 434:../SPL/src/stm32f10x_sdio.c ****   
 435:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 436:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 437:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 438:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 439:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 440:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 441:../SPL/src/stm32f10x_sdio.c **** 
 442:../SPL/src/stm32f10x_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 443:../SPL/src/stm32f10x_sdio.c ****   /* Set the SDIO Data TimeOut value */
 444:../SPL/src/stm32f10x_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 675              		.loc 1 444 0
 676 02aa 124B     		ldr	r3, .L39
 677 02ac 7A68     		ldr	r2, [r7, #4]
 678 02ae 1268     		ldr	r2, [r2, #0]
 679 02b0 5A62     		str	r2, [r3, #36]
 445:../SPL/src/stm32f10x_sdio.c **** 
 446:../SPL/src/stm32f10x_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 447:../SPL/src/stm32f10x_sdio.c ****   /* Set the SDIO DataLength value */
 448:../SPL/src/stm32f10x_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 680              		.loc 1 448 0
 681 02b2 104B     		ldr	r3, .L39
 682 02b4 7A68     		ldr	r2, [r7, #4]
 683 02b6 5268     		ldr	r2, [r2, #4]
 684 02b8 9A62     		str	r2, [r3, #40]
 449:../SPL/src/stm32f10x_sdio.c **** 
 450:../SPL/src/stm32f10x_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 451:../SPL/src/stm32f10x_sdio.c ****   /* Get the SDIO DCTRL value */
 452:../SPL/src/stm32f10x_sdio.c ****   tmpreg = SDIO->DCTRL;
 685              		.loc 1 452 0
 686 02ba 0E4B     		ldr	r3, .L39
 687 02bc DB6A     		ldr	r3, [r3, #44]
 688 02be FB60     		str	r3, [r7, #12]
 453:../SPL/src/stm32f10x_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 454:../SPL/src/stm32f10x_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 689              		.loc 1 454 0
 690 02c0 FB68     		ldr	r3, [r7, #12]
 691 02c2 23F0F703 		bic	r3, r3, #247
 692 02c6 FB60     		str	r3, [r7, #12]
 455:../SPL/src/stm32f10x_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 456:../SPL/src/stm32f10x_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 457:../SPL/src/stm32f10x_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 458:../SPL/src/stm32f10x_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 459:../SPL/src/stm32f10x_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 693              		.loc 1 459 0
 694 02c8 7B68     		ldr	r3, [r7, #4]
 695 02ca 9A68     		ldr	r2, [r3, #8]
 696 02cc 7B68     		ldr	r3, [r7, #4]
 697 02ce DB68     		ldr	r3, [r3, #12]
 698 02d0 1A43     		orrs	r2, r2, r3
 460:../SPL/src/stm32f10x_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 699              		.loc 1 460 0
 700 02d2 7B68     		ldr	r3, [r7, #4]
 701 02d4 1B69     		ldr	r3, [r3, #16]
 702 02d6 1A43     		orrs	r2, r2, r3
 703 02d8 7B68     		ldr	r3, [r7, #4]
 704 02da 5B69     		ldr	r3, [r3, #20]
 705 02dc 1343     		orrs	r3, r3, r2
 459:../SPL/src/stm32f10x_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 706              		.loc 1 459 0
 707 02de FA68     		ldr	r2, [r7, #12]
 708 02e0 1343     		orrs	r3, r3, r2
 709 02e2 FB60     		str	r3, [r7, #12]
 461:../SPL/src/stm32f10x_sdio.c **** 
 462:../SPL/src/stm32f10x_sdio.c ****   /* Write to SDIO DCTRL */
 463:../SPL/src/stm32f10x_sdio.c ****   SDIO->DCTRL = tmpreg;
 710              		.loc 1 463 0
 711 02e4 034B     		ldr	r3, .L39
 712 02e6 FA68     		ldr	r2, [r7, #12]
 713 02e8 DA62     		str	r2, [r3, #44]
 464:../SPL/src/stm32f10x_sdio.c **** }
 714              		.loc 1 464 0
 715 02ea 07F11407 		add	r7, r7, #20
 716 02ee BD46     		mov	sp, r7
 717 02f0 80BC     		pop	{r7}
 718 02f2 7047     		bx	lr
 719              	.L40:
 720              		.align	2
 721              	.L39:
 722 02f4 00800140 		.word	1073840128
 723              		.cfi_endproc
 724              	.LFE41:
 726              		.align	2
 727              		.global	SDIO_DataStructInit
 728              		.thumb
 729              		.thumb_func
 731              	SDIO_DataStructInit:
 732              	.LFB42:
 465:../SPL/src/stm32f10x_sdio.c **** 
 466:../SPL/src/stm32f10x_sdio.c **** /**
 467:../SPL/src/stm32f10x_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 468:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure which
 469:../SPL/src/stm32f10x_sdio.c ****   *         will be initialized.
 470:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 471:../SPL/src/stm32f10x_sdio.c ****   */
 472:../SPL/src/stm32f10x_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 473:../SPL/src/stm32f10x_sdio.c **** {
 733              		.loc 1 473 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 8
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737              		@ link register save eliminated.
 738 02f8 80B4     		push	{r7}
 739              	.LCFI36:
 740              		.cfi_def_cfa_offset 4
 741              		.cfi_offset 7, -4
 742 02fa 83B0     		sub	sp, sp, #12
 743              	.LCFI37:
 744              		.cfi_def_cfa_offset 16
 745 02fc 00AF     		add	r7, sp, #0
 746              	.LCFI38:
 747              		.cfi_def_cfa_register 7
 748 02fe 7860     		str	r0, [r7, #4]
 474:../SPL/src/stm32f10x_sdio.c ****   /* SDIO_DataInitStruct members default value */
 475:../SPL/src/stm32f10x_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 749              		.loc 1 475 0
 750 0300 7B68     		ldr	r3, [r7, #4]
 751 0302 4FF0FF32 		mov	r2, #-1
 752 0306 1A60     		str	r2, [r3, #0]
 476:../SPL/src/stm32f10x_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 753              		.loc 1 476 0
 754 0308 7B68     		ldr	r3, [r7, #4]
 755 030a 4FF00002 		mov	r2, #0
 756 030e 5A60     		str	r2, [r3, #4]
 477:../SPL/src/stm32f10x_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 757              		.loc 1 477 0
 758 0310 7B68     		ldr	r3, [r7, #4]
 759 0312 4FF00002 		mov	r2, #0
 760 0316 9A60     		str	r2, [r3, #8]
 478:../SPL/src/stm32f10x_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 761              		.loc 1 478 0
 762 0318 7B68     		ldr	r3, [r7, #4]
 763 031a 4FF00002 		mov	r2, #0
 764 031e DA60     		str	r2, [r3, #12]
 479:../SPL/src/stm32f10x_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 765              		.loc 1 479 0
 766 0320 7B68     		ldr	r3, [r7, #4]
 767 0322 4FF00002 		mov	r2, #0
 768 0326 1A61     		str	r2, [r3, #16]
 480:../SPL/src/stm32f10x_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 769              		.loc 1 480 0
 770 0328 7B68     		ldr	r3, [r7, #4]
 771 032a 4FF00002 		mov	r2, #0
 772 032e 5A61     		str	r2, [r3, #20]
 481:../SPL/src/stm32f10x_sdio.c **** }
 773              		.loc 1 481 0
 774 0330 07F10C07 		add	r7, r7, #12
 775 0334 BD46     		mov	sp, r7
 776 0336 80BC     		pop	{r7}
 777 0338 7047     		bx	lr
 778              		.cfi_endproc
 779              	.LFE42:
 781 033a 00BF     		.align	2
 782              		.global	SDIO_GetDataCounter
 783              		.thumb
 784              		.thumb_func
 786              	SDIO_GetDataCounter:
 787              	.LFB43:
 482:../SPL/src/stm32f10x_sdio.c **** 
 483:../SPL/src/stm32f10x_sdio.c **** /**
 484:../SPL/src/stm32f10x_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 485:../SPL/src/stm32f10x_sdio.c ****   * @param  None
 486:../SPL/src/stm32f10x_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 487:../SPL/src/stm32f10x_sdio.c ****   */
 488:../SPL/src/stm32f10x_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 489:../SPL/src/stm32f10x_sdio.c **** { 
 788              		.loc 1 489 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 1, uses_anonymous_args = 0
 792              		@ link register save eliminated.
 793 033c 80B4     		push	{r7}
 794              	.LCFI39:
 795              		.cfi_def_cfa_offset 4
 796              		.cfi_offset 7, -4
 797 033e 00AF     		add	r7, sp, #0
 798              	.LCFI40:
 799              		.cfi_def_cfa_register 7
 490:../SPL/src/stm32f10x_sdio.c ****   return SDIO->DCOUNT;
 800              		.loc 1 490 0
 801 0340 024B     		ldr	r3, .L44
 802 0342 1B6B     		ldr	r3, [r3, #48]
 491:../SPL/src/stm32f10x_sdio.c **** }
 803              		.loc 1 491 0
 804 0344 1846     		mov	r0, r3
 805 0346 BD46     		mov	sp, r7
 806 0348 80BC     		pop	{r7}
 807 034a 7047     		bx	lr
 808              	.L45:
 809              		.align	2
 810              	.L44:
 811 034c 00800140 		.word	1073840128
 812              		.cfi_endproc
 813              	.LFE43:
 815              		.align	2
 816              		.global	SDIO_ReadData
 817              		.thumb
 818              		.thumb_func
 820              	SDIO_ReadData:
 821              	.LFB44:
 492:../SPL/src/stm32f10x_sdio.c **** 
 493:../SPL/src/stm32f10x_sdio.c **** /**
 494:../SPL/src/stm32f10x_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 495:../SPL/src/stm32f10x_sdio.c ****   * @param  None
 496:../SPL/src/stm32f10x_sdio.c ****   * @retval Data received
 497:../SPL/src/stm32f10x_sdio.c ****   */
 498:../SPL/src/stm32f10x_sdio.c **** uint32_t SDIO_ReadData(void)
 499:../SPL/src/stm32f10x_sdio.c **** { 
 822              		.loc 1 499 0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 1, uses_anonymous_args = 0
 826              		@ link register save eliminated.
 827 0350 80B4     		push	{r7}
 828              	.LCFI41:
 829              		.cfi_def_cfa_offset 4
 830              		.cfi_offset 7, -4
 831 0352 00AF     		add	r7, sp, #0
 832              	.LCFI42:
 833              		.cfi_def_cfa_register 7
 500:../SPL/src/stm32f10x_sdio.c ****   return SDIO->FIFO;
 834              		.loc 1 500 0
 835 0354 034B     		ldr	r3, .L48
 836 0356 D3F88030 		ldr	r3, [r3, #128]
 501:../SPL/src/stm32f10x_sdio.c **** }
 837              		.loc 1 501 0
 838 035a 1846     		mov	r0, r3
 839 035c BD46     		mov	sp, r7
 840 035e 80BC     		pop	{r7}
 841 0360 7047     		bx	lr
 842              	.L49:
 843 0362 00BF     		.align	2
 844              	.L48:
 845 0364 00800140 		.word	1073840128
 846              		.cfi_endproc
 847              	.LFE44:
 849              		.align	2
 850              		.global	SDIO_WriteData
 851              		.thumb
 852              		.thumb_func
 854              	SDIO_WriteData:
 855              	.LFB45:
 502:../SPL/src/stm32f10x_sdio.c **** 
 503:../SPL/src/stm32f10x_sdio.c **** /**
 504:../SPL/src/stm32f10x_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 505:../SPL/src/stm32f10x_sdio.c ****   * @param  Data: 32-bit data word to write.
 506:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 507:../SPL/src/stm32f10x_sdio.c ****   */
 508:../SPL/src/stm32f10x_sdio.c **** void SDIO_WriteData(uint32_t Data)
 509:../SPL/src/stm32f10x_sdio.c **** { 
 856              		.loc 1 509 0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 8
 859              		@ frame_needed = 1, uses_anonymous_args = 0
 860              		@ link register save eliminated.
 861 0368 80B4     		push	{r7}
 862              	.LCFI43:
 863              		.cfi_def_cfa_offset 4
 864              		.cfi_offset 7, -4
 865 036a 83B0     		sub	sp, sp, #12
 866              	.LCFI44:
 867              		.cfi_def_cfa_offset 16
 868 036c 00AF     		add	r7, sp, #0
 869              	.LCFI45:
 870              		.cfi_def_cfa_register 7
 871 036e 7860     		str	r0, [r7, #4]
 510:../SPL/src/stm32f10x_sdio.c ****   SDIO->FIFO = Data;
 872              		.loc 1 510 0
 873 0370 044B     		ldr	r3, .L51
 874 0372 7A68     		ldr	r2, [r7, #4]
 875 0374 C3F88020 		str	r2, [r3, #128]
 511:../SPL/src/stm32f10x_sdio.c **** }
 876              		.loc 1 511 0
 877 0378 07F10C07 		add	r7, r7, #12
 878 037c BD46     		mov	sp, r7
 879 037e 80BC     		pop	{r7}
 880 0380 7047     		bx	lr
 881              	.L52:
 882 0382 00BF     		.align	2
 883              	.L51:
 884 0384 00800140 		.word	1073840128
 885              		.cfi_endproc
 886              	.LFE45:
 888              		.align	2
 889              		.global	SDIO_GetFIFOCount
 890              		.thumb
 891              		.thumb_func
 893              	SDIO_GetFIFOCount:
 894              	.LFB46:
 512:../SPL/src/stm32f10x_sdio.c **** 
 513:../SPL/src/stm32f10x_sdio.c **** /**
 514:../SPL/src/stm32f10x_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 515:../SPL/src/stm32f10x_sdio.c ****   * @param  None
 516:../SPL/src/stm32f10x_sdio.c ****   * @retval Remaining number of words.
 517:../SPL/src/stm32f10x_sdio.c ****   */
 518:../SPL/src/stm32f10x_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 519:../SPL/src/stm32f10x_sdio.c **** { 
 895              		.loc 1 519 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 1, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900 0388 80B4     		push	{r7}
 901              	.LCFI46:
 902              		.cfi_def_cfa_offset 4
 903              		.cfi_offset 7, -4
 904 038a 00AF     		add	r7, sp, #0
 905              	.LCFI47:
 906              		.cfi_def_cfa_register 7
 520:../SPL/src/stm32f10x_sdio.c ****   return SDIO->FIFOCNT;
 907              		.loc 1 520 0
 908 038c 024B     		ldr	r3, .L55
 909 038e 9B6C     		ldr	r3, [r3, #72]
 521:../SPL/src/stm32f10x_sdio.c **** }
 910              		.loc 1 521 0
 911 0390 1846     		mov	r0, r3
 912 0392 BD46     		mov	sp, r7
 913 0394 80BC     		pop	{r7}
 914 0396 7047     		bx	lr
 915              	.L56:
 916              		.align	2
 917              	.L55:
 918 0398 00800140 		.word	1073840128
 919              		.cfi_endproc
 920              	.LFE46:
 922              		.align	2
 923              		.global	SDIO_StartSDIOReadWait
 924              		.thumb
 925              		.thumb_func
 927              	SDIO_StartSDIOReadWait:
 928              	.LFB47:
 522:../SPL/src/stm32f10x_sdio.c **** 
 523:../SPL/src/stm32f10x_sdio.c **** /**
 524:../SPL/src/stm32f10x_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 525:../SPL/src/stm32f10x_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 526:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be: ENABLE or DISABLE.
 527:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 528:../SPL/src/stm32f10x_sdio.c ****   */
 529:../SPL/src/stm32f10x_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 530:../SPL/src/stm32f10x_sdio.c **** { 
 929              		.loc 1 530 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 8
 932              		@ frame_needed = 1, uses_anonymous_args = 0
 933              		@ link register save eliminated.
 934 039c 80B4     		push	{r7}
 935              	.LCFI48:
 936              		.cfi_def_cfa_offset 4
 937              		.cfi_offset 7, -4
 938 039e 83B0     		sub	sp, sp, #12
 939              	.LCFI49:
 940              		.cfi_def_cfa_offset 16
 941 03a0 00AF     		add	r7, sp, #0
 942              	.LCFI50:
 943              		.cfi_def_cfa_register 7
 944 03a2 0346     		mov	r3, r0
 945 03a4 FB71     		strb	r3, [r7, #7]
 531:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 532:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 533:../SPL/src/stm32f10x_sdio.c ****   
 534:../SPL/src/stm32f10x_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 946              		.loc 1 534 0
 947 03a6 044B     		ldr	r3, .L58
 948 03a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 949 03aa 1A60     		str	r2, [r3, #0]
 535:../SPL/src/stm32f10x_sdio.c **** }
 950              		.loc 1 535 0
 951 03ac 07F10C07 		add	r7, r7, #12
 952 03b0 BD46     		mov	sp, r7
 953 03b2 80BC     		pop	{r7}
 954 03b4 7047     		bx	lr
 955              	.L59:
 956 03b6 00BF     		.align	2
 957              	.L58:
 958 03b8 A0053042 		.word	1110443424
 959              		.cfi_endproc
 960              	.LFE47:
 962              		.align	2
 963              		.global	SDIO_StopSDIOReadWait
 964              		.thumb
 965              		.thumb_func
 967              	SDIO_StopSDIOReadWait:
 968              	.LFB48:
 536:../SPL/src/stm32f10x_sdio.c **** 
 537:../SPL/src/stm32f10x_sdio.c **** /**
 538:../SPL/src/stm32f10x_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 539:../SPL/src/stm32f10x_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 540:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be: ENABLE or DISABLE.
 541:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 542:../SPL/src/stm32f10x_sdio.c ****   */
 543:../SPL/src/stm32f10x_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 544:../SPL/src/stm32f10x_sdio.c **** { 
 969              		.loc 1 544 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 8
 972              		@ frame_needed = 1, uses_anonymous_args = 0
 973              		@ link register save eliminated.
 974 03bc 80B4     		push	{r7}
 975              	.LCFI51:
 976              		.cfi_def_cfa_offset 4
 977              		.cfi_offset 7, -4
 978 03be 83B0     		sub	sp, sp, #12
 979              	.LCFI52:
 980              		.cfi_def_cfa_offset 16
 981 03c0 00AF     		add	r7, sp, #0
 982              	.LCFI53:
 983              		.cfi_def_cfa_register 7
 984 03c2 0346     		mov	r3, r0
 985 03c4 FB71     		strb	r3, [r7, #7]
 545:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 546:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 547:../SPL/src/stm32f10x_sdio.c ****   
 548:../SPL/src/stm32f10x_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 986              		.loc 1 548 0
 987 03c6 044B     		ldr	r3, .L61
 988 03c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 989 03ca 1A60     		str	r2, [r3, #0]
 549:../SPL/src/stm32f10x_sdio.c **** }
 990              		.loc 1 549 0
 991 03cc 07F10C07 		add	r7, r7, #12
 992 03d0 BD46     		mov	sp, r7
 993 03d2 80BC     		pop	{r7}
 994 03d4 7047     		bx	lr
 995              	.L62:
 996 03d6 00BF     		.align	2
 997              	.L61:
 998 03d8 A4053042 		.word	1110443428
 999              		.cfi_endproc
 1000              	.LFE48:
 1002              		.align	2
 1003              		.global	SDIO_SetSDIOReadWaitMode
 1004              		.thumb
 1005              		.thumb_func
 1007              	SDIO_SetSDIOReadWaitMode:
 1008              	.LFB49:
 550:../SPL/src/stm32f10x_sdio.c **** 
 551:../SPL/src/stm32f10x_sdio.c **** /**
 552:../SPL/src/stm32f10x_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 553:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 554:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be:
 555:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 556:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 557:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 558:../SPL/src/stm32f10x_sdio.c ****   */
 559:../SPL/src/stm32f10x_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 560:../SPL/src/stm32f10x_sdio.c **** {
 1009              		.loc 1 560 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 8
 1012              		@ frame_needed = 1, uses_anonymous_args = 0
 1013              		@ link register save eliminated.
 1014 03dc 80B4     		push	{r7}
 1015              	.LCFI54:
 1016              		.cfi_def_cfa_offset 4
 1017              		.cfi_offset 7, -4
 1018 03de 83B0     		sub	sp, sp, #12
 1019              	.LCFI55:
 1020              		.cfi_def_cfa_offset 16
 1021 03e0 00AF     		add	r7, sp, #0
 1022              	.LCFI56:
 1023              		.cfi_def_cfa_register 7
 1024 03e2 7860     		str	r0, [r7, #4]
 561:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 562:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 563:../SPL/src/stm32f10x_sdio.c ****   
 564:../SPL/src/stm32f10x_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 1025              		.loc 1 564 0
 1026 03e4 034B     		ldr	r3, .L64
 1027 03e6 7A68     		ldr	r2, [r7, #4]
 1028 03e8 1A60     		str	r2, [r3, #0]
 565:../SPL/src/stm32f10x_sdio.c **** }
 1029              		.loc 1 565 0
 1030 03ea 07F10C07 		add	r7, r7, #12
 1031 03ee BD46     		mov	sp, r7
 1032 03f0 80BC     		pop	{r7}
 1033 03f2 7047     		bx	lr
 1034              	.L65:
 1035              		.align	2
 1036              	.L64:
 1037 03f4 A8053042 		.word	1110443432
 1038              		.cfi_endproc
 1039              	.LFE49:
 1041              		.align	2
 1042              		.global	SDIO_SetSDIOOperation
 1043              		.thumb
 1044              		.thumb_func
 1046              	SDIO_SetSDIOOperation:
 1047              	.LFB50:
 566:../SPL/src/stm32f10x_sdio.c **** 
 567:../SPL/src/stm32f10x_sdio.c **** /**
 568:../SPL/src/stm32f10x_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 569:../SPL/src/stm32f10x_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 570:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be: ENABLE or DISABLE.
 571:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 572:../SPL/src/stm32f10x_sdio.c ****   */
 573:../SPL/src/stm32f10x_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 574:../SPL/src/stm32f10x_sdio.c **** { 
 1048              		.loc 1 574 0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 8
 1051              		@ frame_needed = 1, uses_anonymous_args = 0
 1052              		@ link register save eliminated.
 1053 03f8 80B4     		push	{r7}
 1054              	.LCFI57:
 1055              		.cfi_def_cfa_offset 4
 1056              		.cfi_offset 7, -4
 1057 03fa 83B0     		sub	sp, sp, #12
 1058              	.LCFI58:
 1059              		.cfi_def_cfa_offset 16
 1060 03fc 00AF     		add	r7, sp, #0
 1061              	.LCFI59:
 1062              		.cfi_def_cfa_register 7
 1063 03fe 0346     		mov	r3, r0
 1064 0400 FB71     		strb	r3, [r7, #7]
 575:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 576:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 577:../SPL/src/stm32f10x_sdio.c ****   
 578:../SPL/src/stm32f10x_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 1065              		.loc 1 578 0
 1066 0402 044B     		ldr	r3, .L67
 1067 0404 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1068 0406 1A60     		str	r2, [r3, #0]
 579:../SPL/src/stm32f10x_sdio.c **** }
 1069              		.loc 1 579 0
 1070 0408 07F10C07 		add	r7, r7, #12
 1071 040c BD46     		mov	sp, r7
 1072 040e 80BC     		pop	{r7}
 1073 0410 7047     		bx	lr
 1074              	.L68:
 1075 0412 00BF     		.align	2
 1076              	.L67:
 1077 0414 AC053042 		.word	1110443436
 1078              		.cfi_endproc
 1079              	.LFE50:
 1081              		.align	2
 1082              		.global	SDIO_SendSDIOSuspendCmd
 1083              		.thumb
 1084              		.thumb_func
 1086              	SDIO_SendSDIOSuspendCmd:
 1087              	.LFB51:
 580:../SPL/src/stm32f10x_sdio.c **** 
 581:../SPL/src/stm32f10x_sdio.c **** /**
 582:../SPL/src/stm32f10x_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 583:../SPL/src/stm32f10x_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 584:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be: ENABLE or DISABLE.
 585:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 586:../SPL/src/stm32f10x_sdio.c ****   */
 587:../SPL/src/stm32f10x_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 588:../SPL/src/stm32f10x_sdio.c **** { 
 1088              		.loc 1 588 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 8
 1091              		@ frame_needed = 1, uses_anonymous_args = 0
 1092              		@ link register save eliminated.
 1093 0418 80B4     		push	{r7}
 1094              	.LCFI60:
 1095              		.cfi_def_cfa_offset 4
 1096              		.cfi_offset 7, -4
 1097 041a 83B0     		sub	sp, sp, #12
 1098              	.LCFI61:
 1099              		.cfi_def_cfa_offset 16
 1100 041c 00AF     		add	r7, sp, #0
 1101              	.LCFI62:
 1102              		.cfi_def_cfa_register 7
 1103 041e 0346     		mov	r3, r0
 1104 0420 FB71     		strb	r3, [r7, #7]
 589:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 590:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:../SPL/src/stm32f10x_sdio.c ****   
 592:../SPL/src/stm32f10x_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 1105              		.loc 1 592 0
 1106 0422 044B     		ldr	r3, .L70
 1107 0424 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1108 0426 1A60     		str	r2, [r3, #0]
 593:../SPL/src/stm32f10x_sdio.c **** }
 1109              		.loc 1 593 0
 1110 0428 07F10C07 		add	r7, r7, #12
 1111 042c BD46     		mov	sp, r7
 1112 042e 80BC     		pop	{r7}
 1113 0430 7047     		bx	lr
 1114              	.L71:
 1115 0432 00BF     		.align	2
 1116              	.L70:
 1117 0434 AC013042 		.word	1110442412
 1118              		.cfi_endproc
 1119              	.LFE51:
 1121              		.align	2
 1122              		.global	SDIO_CommandCompletionCmd
 1123              		.thumb
 1124              		.thumb_func
 1126              	SDIO_CommandCompletionCmd:
 1127              	.LFB52:
 594:../SPL/src/stm32f10x_sdio.c **** 
 595:../SPL/src/stm32f10x_sdio.c **** /**
 596:../SPL/src/stm32f10x_sdio.c ****   * @brief  Enables or disables the command completion signal.
 597:../SPL/src/stm32f10x_sdio.c ****   * @param  NewState: new state of command completion signal. 
 598:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be: ENABLE or DISABLE.
 599:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 600:../SPL/src/stm32f10x_sdio.c ****   */
 601:../SPL/src/stm32f10x_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 602:../SPL/src/stm32f10x_sdio.c **** { 
 1128              		.loc 1 602 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 8
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132              		@ link register save eliminated.
 1133 0438 80B4     		push	{r7}
 1134              	.LCFI63:
 1135              		.cfi_def_cfa_offset 4
 1136              		.cfi_offset 7, -4
 1137 043a 83B0     		sub	sp, sp, #12
 1138              	.LCFI64:
 1139              		.cfi_def_cfa_offset 16
 1140 043c 00AF     		add	r7, sp, #0
 1141              	.LCFI65:
 1142              		.cfi_def_cfa_register 7
 1143 043e 0346     		mov	r3, r0
 1144 0440 FB71     		strb	r3, [r7, #7]
 603:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 604:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 605:../SPL/src/stm32f10x_sdio.c ****   
 606:../SPL/src/stm32f10x_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 1145              		.loc 1 606 0
 1146 0442 044B     		ldr	r3, .L73
 1147 0444 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1148 0446 1A60     		str	r2, [r3, #0]
 607:../SPL/src/stm32f10x_sdio.c **** }
 1149              		.loc 1 607 0
 1150 0448 07F10C07 		add	r7, r7, #12
 1151 044c BD46     		mov	sp, r7
 1152 044e 80BC     		pop	{r7}
 1153 0450 7047     		bx	lr
 1154              	.L74:
 1155 0452 00BF     		.align	2
 1156              	.L73:
 1157 0454 B0013042 		.word	1110442416
 1158              		.cfi_endproc
 1159              	.LFE52:
 1161              		.align	2
 1162              		.global	SDIO_CEATAITCmd
 1163              		.thumb
 1164              		.thumb_func
 1166              	SDIO_CEATAITCmd:
 1167              	.LFB53:
 608:../SPL/src/stm32f10x_sdio.c **** 
 609:../SPL/src/stm32f10x_sdio.c **** /**
 610:../SPL/src/stm32f10x_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 611:../SPL/src/stm32f10x_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. This parameter can be: ENABLE or DISABLE.
 612:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 613:../SPL/src/stm32f10x_sdio.c ****   */
 614:../SPL/src/stm32f10x_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 615:../SPL/src/stm32f10x_sdio.c **** { 
 1168              		.loc 1 615 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 8
 1171              		@ frame_needed = 1, uses_anonymous_args = 0
 1172              		@ link register save eliminated.
 1173 0458 80B4     		push	{r7}
 1174              	.LCFI66:
 1175              		.cfi_def_cfa_offset 4
 1176              		.cfi_offset 7, -4
 1177 045a 83B0     		sub	sp, sp, #12
 1178              	.LCFI67:
 1179              		.cfi_def_cfa_offset 16
 1180 045c 00AF     		add	r7, sp, #0
 1181              	.LCFI68:
 1182              		.cfi_def_cfa_register 7
 1183 045e 0346     		mov	r3, r0
 1184 0460 FB71     		strb	r3, [r7, #7]
 616:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 617:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 618:../SPL/src/stm32f10x_sdio.c ****   
 619:../SPL/src/stm32f10x_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 1185              		.loc 1 619 0
 1186 0462 074B     		ldr	r3, .L76
 1187 0464 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1188 0466 02F00102 		and	r2, r2, #1
 1189 046a 002A     		cmp	r2, #0
 1190 046c 14BF     		ite	ne
 1191 046e 0022     		movne	r2, #0
 1192 0470 0122     		moveq	r2, #1
 1193 0472 D2B2     		uxtb	r2, r2
 1194 0474 1A60     		str	r2, [r3, #0]
 620:../SPL/src/stm32f10x_sdio.c **** }
 1195              		.loc 1 620 0
 1196 0476 07F10C07 		add	r7, r7, #12
 1197 047a BD46     		mov	sp, r7
 1198 047c 80BC     		pop	{r7}
 1199 047e 7047     		bx	lr
 1200              	.L77:
 1201              		.align	2
 1202              	.L76:
 1203 0480 B4013042 		.word	1110442420
 1204              		.cfi_endproc
 1205              	.LFE53:
 1207              		.align	2
 1208              		.global	SDIO_SendCEATACmd
 1209              		.thumb
 1210              		.thumb_func
 1212              	SDIO_SendCEATACmd:
 1213              	.LFB54:
 621:../SPL/src/stm32f10x_sdio.c **** 
 622:../SPL/src/stm32f10x_sdio.c **** /**
 623:../SPL/src/stm32f10x_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 624:../SPL/src/stm32f10x_sdio.c ****   * @param  NewState: new state of CE-ATA command. This parameter can be: ENABLE or DISABLE.
 625:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 626:../SPL/src/stm32f10x_sdio.c ****   */
 627:../SPL/src/stm32f10x_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 628:../SPL/src/stm32f10x_sdio.c **** { 
 1214              		.loc 1 628 0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 8
 1217              		@ frame_needed = 1, uses_anonymous_args = 0
 1218              		@ link register save eliminated.
 1219 0484 80B4     		push	{r7}
 1220              	.LCFI69:
 1221              		.cfi_def_cfa_offset 4
 1222              		.cfi_offset 7, -4
 1223 0486 83B0     		sub	sp, sp, #12
 1224              	.LCFI70:
 1225              		.cfi_def_cfa_offset 16
 1226 0488 00AF     		add	r7, sp, #0
 1227              	.LCFI71:
 1228              		.cfi_def_cfa_register 7
 1229 048a 0346     		mov	r3, r0
 1230 048c FB71     		strb	r3, [r7, #7]
 629:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 630:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 631:../SPL/src/stm32f10x_sdio.c ****   
 632:../SPL/src/stm32f10x_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 1231              		.loc 1 632 0
 1232 048e 044B     		ldr	r3, .L79
 1233 0490 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1234 0492 1A60     		str	r2, [r3, #0]
 633:../SPL/src/stm32f10x_sdio.c **** }
 1235              		.loc 1 633 0
 1236 0494 07F10C07 		add	r7, r7, #12
 1237 0498 BD46     		mov	sp, r7
 1238 049a 80BC     		pop	{r7}
 1239 049c 7047     		bx	lr
 1240              	.L80:
 1241 049e 00BF     		.align	2
 1242              	.L79:
 1243 04a0 B8013042 		.word	1110442424
 1244              		.cfi_endproc
 1245              	.LFE54:
 1247              		.align	2
 1248              		.global	SDIO_GetFlagStatus
 1249              		.thumb
 1250              		.thumb_func
 1252              	SDIO_GetFlagStatus:
 1253              	.LFB55:
 634:../SPL/src/stm32f10x_sdio.c **** 
 635:../SPL/src/stm32f10x_sdio.c **** /**
 636:../SPL/src/stm32f10x_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 637:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 638:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be one of the following values:
 639:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 640:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 641:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 642:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_DTIMEOUT: Data timeout
 643:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 644:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 645:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 646:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 647:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 648:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide 
 649:../SPL/src/stm32f10x_sdio.c ****   *                              bus mode.
 650:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 651:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 652:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_TXACT:    Data transmit in progress
 653:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_RXACT:    Data receive in progress
 654:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 655:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 656:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 657:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 658:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 659:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 660:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 661:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 662:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 663:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 664:../SPL/src/stm32f10x_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 665:../SPL/src/stm32f10x_sdio.c ****   */
 666:../SPL/src/stm32f10x_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 667:../SPL/src/stm32f10x_sdio.c **** { 
 1254              		.loc 1 667 0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 16
 1257              		@ frame_needed = 1, uses_anonymous_args = 0
 1258              		@ link register save eliminated.
 1259 04a4 80B4     		push	{r7}
 1260              	.LCFI72:
 1261              		.cfi_def_cfa_offset 4
 1262              		.cfi_offset 7, -4
 1263 04a6 85B0     		sub	sp, sp, #20
 1264              	.LCFI73:
 1265              		.cfi_def_cfa_offset 24
 1266 04a8 00AF     		add	r7, sp, #0
 1267              	.LCFI74:
 1268              		.cfi_def_cfa_register 7
 1269 04aa 7860     		str	r0, [r7, #4]
 668:../SPL/src/stm32f10x_sdio.c ****   FlagStatus bitstatus = RESET;
 1270              		.loc 1 668 0
 1271 04ac 4FF00003 		mov	r3, #0
 1272 04b0 FB73     		strb	r3, [r7, #15]
 669:../SPL/src/stm32f10x_sdio.c ****   
 670:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 671:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 672:../SPL/src/stm32f10x_sdio.c ****   
 673:../SPL/src/stm32f10x_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 1273              		.loc 1 673 0
 1274 04b2 0A4B     		ldr	r3, .L85
 1275 04b4 5A6B     		ldr	r2, [r3, #52]
 1276 04b6 7B68     		ldr	r3, [r7, #4]
 1277 04b8 1340     		ands	r3, r3, r2
 1278 04ba 002B     		cmp	r3, #0
 1279 04bc 03D0     		beq	.L82
 674:../SPL/src/stm32f10x_sdio.c ****   {
 675:../SPL/src/stm32f10x_sdio.c ****     bitstatus = SET;
 1280              		.loc 1 675 0
 1281 04be 4FF00103 		mov	r3, #1
 1282 04c2 FB73     		strb	r3, [r7, #15]
 1283 04c4 02E0     		b	.L83
 1284              	.L82:
 676:../SPL/src/stm32f10x_sdio.c ****   }
 677:../SPL/src/stm32f10x_sdio.c ****   else
 678:../SPL/src/stm32f10x_sdio.c ****   {
 679:../SPL/src/stm32f10x_sdio.c ****     bitstatus = RESET;
 1285              		.loc 1 679 0
 1286 04c6 4FF00003 		mov	r3, #0
 1287 04ca FB73     		strb	r3, [r7, #15]
 1288              	.L83:
 680:../SPL/src/stm32f10x_sdio.c ****   }
 681:../SPL/src/stm32f10x_sdio.c ****   return bitstatus;
 1289              		.loc 1 681 0
 1290 04cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 682:../SPL/src/stm32f10x_sdio.c **** }
 1291              		.loc 1 682 0
 1292 04ce 1846     		mov	r0, r3
 1293 04d0 07F11407 		add	r7, r7, #20
 1294 04d4 BD46     		mov	sp, r7
 1295 04d6 80BC     		pop	{r7}
 1296 04d8 7047     		bx	lr
 1297              	.L86:
 1298 04da 00BF     		.align	2
 1299              	.L85:
 1300 04dc 00800140 		.word	1073840128
 1301              		.cfi_endproc
 1302              	.LFE55:
 1304              		.align	2
 1305              		.global	SDIO_ClearFlag
 1306              		.thumb
 1307              		.thumb_func
 1309              	SDIO_ClearFlag:
 1310              	.LFB56:
 683:../SPL/src/stm32f10x_sdio.c **** 
 684:../SPL/src/stm32f10x_sdio.c **** /**
 685:../SPL/src/stm32f10x_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 686:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 687:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be one or a combination of the following values:
 688:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 689:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 690:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 691:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_DTIMEOUT: Data timeout
 692:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 693:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 694:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 695:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 696:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 697:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide 
 698:../SPL/src/stm32f10x_sdio.c ****   *                              bus mode
 699:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 700:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 701:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 702:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 703:../SPL/src/stm32f10x_sdio.c ****   */
 704:../SPL/src/stm32f10x_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 705:../SPL/src/stm32f10x_sdio.c **** { 
 1311              		.loc 1 705 0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 8
 1314              		@ frame_needed = 1, uses_anonymous_args = 0
 1315              		@ link register save eliminated.
 1316 04e0 80B4     		push	{r7}
 1317              	.LCFI75:
 1318              		.cfi_def_cfa_offset 4
 1319              		.cfi_offset 7, -4
 1320 04e2 83B0     		sub	sp, sp, #12
 1321              	.LCFI76:
 1322              		.cfi_def_cfa_offset 16
 1323 04e4 00AF     		add	r7, sp, #0
 1324              	.LCFI77:
 1325              		.cfi_def_cfa_register 7
 1326 04e6 7860     		str	r0, [r7, #4]
 706:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 707:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 708:../SPL/src/stm32f10x_sdio.c ****    
 709:../SPL/src/stm32f10x_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 1327              		.loc 1 709 0
 1328 04e8 034B     		ldr	r3, .L88
 1329 04ea 7A68     		ldr	r2, [r7, #4]
 1330 04ec 9A63     		str	r2, [r3, #56]
 710:../SPL/src/stm32f10x_sdio.c **** }
 1331              		.loc 1 710 0
 1332 04ee 07F10C07 		add	r7, r7, #12
 1333 04f2 BD46     		mov	sp, r7
 1334 04f4 80BC     		pop	{r7}
 1335 04f6 7047     		bx	lr
 1336              	.L89:
 1337              		.align	2
 1338              	.L88:
 1339 04f8 00800140 		.word	1073840128
 1340              		.cfi_endproc
 1341              	.LFE56:
 1343              		.align	2
 1344              		.global	SDIO_GetITStatus
 1345              		.thumb
 1346              		.thumb_func
 1348              	SDIO_GetITStatus:
 1349              	.LFB57:
 711:../SPL/src/stm32f10x_sdio.c **** 
 712:../SPL/src/stm32f10x_sdio.c **** /**
 713:../SPL/src/stm32f10x_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 714:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 715:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be one of the following values:
 716:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 717:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 718:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 719:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 720:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 721:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 722:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 723:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 724:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 725:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 726:../SPL/src/stm32f10x_sdio.c ****   *                            bus mode interrupt
 727:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 728:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 729:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 730:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 731:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 732:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 733:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 734:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 735:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 736:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 737:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 738:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 739:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 740:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 741:../SPL/src/stm32f10x_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 742:../SPL/src/stm32f10x_sdio.c ****   */
 743:../SPL/src/stm32f10x_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 744:../SPL/src/stm32f10x_sdio.c **** { 
 1350              		.loc 1 744 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 16
 1353              		@ frame_needed = 1, uses_anonymous_args = 0
 1354              		@ link register save eliminated.
 1355 04fc 80B4     		push	{r7}
 1356              	.LCFI78:
 1357              		.cfi_def_cfa_offset 4
 1358              		.cfi_offset 7, -4
 1359 04fe 85B0     		sub	sp, sp, #20
 1360              	.LCFI79:
 1361              		.cfi_def_cfa_offset 24
 1362 0500 00AF     		add	r7, sp, #0
 1363              	.LCFI80:
 1364              		.cfi_def_cfa_register 7
 1365 0502 7860     		str	r0, [r7, #4]
 745:../SPL/src/stm32f10x_sdio.c ****   ITStatus bitstatus = RESET;
 1366              		.loc 1 745 0
 1367 0504 4FF00003 		mov	r3, #0
 1368 0508 FB73     		strb	r3, [r7, #15]
 746:../SPL/src/stm32f10x_sdio.c ****   
 747:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 748:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 749:../SPL/src/stm32f10x_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 1369              		.loc 1 749 0
 1370 050a 0A4B     		ldr	r3, .L94
 1371 050c 5A6B     		ldr	r2, [r3, #52]
 1372 050e 7B68     		ldr	r3, [r7, #4]
 1373 0510 1340     		ands	r3, r3, r2
 1374 0512 002B     		cmp	r3, #0
 1375 0514 03D0     		beq	.L91
 750:../SPL/src/stm32f10x_sdio.c ****   {
 751:../SPL/src/stm32f10x_sdio.c ****     bitstatus = SET;
 1376              		.loc 1 751 0
 1377 0516 4FF00103 		mov	r3, #1
 1378 051a FB73     		strb	r3, [r7, #15]
 1379 051c 02E0     		b	.L92
 1380              	.L91:
 752:../SPL/src/stm32f10x_sdio.c ****   }
 753:../SPL/src/stm32f10x_sdio.c ****   else
 754:../SPL/src/stm32f10x_sdio.c ****   {
 755:../SPL/src/stm32f10x_sdio.c ****     bitstatus = RESET;
 1381              		.loc 1 755 0
 1382 051e 4FF00003 		mov	r3, #0
 1383 0522 FB73     		strb	r3, [r7, #15]
 1384              	.L92:
 756:../SPL/src/stm32f10x_sdio.c ****   }
 757:../SPL/src/stm32f10x_sdio.c ****   return bitstatus;
 1385              		.loc 1 757 0
 1386 0524 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 758:../SPL/src/stm32f10x_sdio.c **** }
 1387              		.loc 1 758 0
 1388 0526 1846     		mov	r0, r3
 1389 0528 07F11407 		add	r7, r7, #20
 1390 052c BD46     		mov	sp, r7
 1391 052e 80BC     		pop	{r7}
 1392 0530 7047     		bx	lr
 1393              	.L95:
 1394 0532 00BF     		.align	2
 1395              	.L94:
 1396 0534 00800140 		.word	1073840128
 1397              		.cfi_endproc
 1398              	.LFE57:
 1400              		.align	2
 1401              		.global	SDIO_ClearITPendingBit
 1402              		.thumb
 1403              		.thumb_func
 1405              	SDIO_ClearITPendingBit:
 1406              	.LFB58:
 759:../SPL/src/stm32f10x_sdio.c **** 
 760:../SPL/src/stm32f10x_sdio.c **** /**
 761:../SPL/src/stm32f10x_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 762:../SPL/src/stm32f10x_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 763:../SPL/src/stm32f10x_sdio.c ****   *   This parameter can be one or a combination of the following values:
 764:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 765:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 766:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 767:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 768:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 769:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 770:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 771:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 772:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 773:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 774:../SPL/src/stm32f10x_sdio.c ****   *                            bus mode interrupt
 775:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 776:../SPL/src/stm32f10x_sdio.c ****   *     @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 777:../SPL/src/stm32f10x_sdio.c ****   * @retval None
 778:../SPL/src/stm32f10x_sdio.c ****   */
 779:../SPL/src/stm32f10x_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 780:../SPL/src/stm32f10x_sdio.c **** { 
 1407              		.loc 1 780 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 8
 1410              		@ frame_needed = 1, uses_anonymous_args = 0
 1411              		@ link register save eliminated.
 1412 0538 80B4     		push	{r7}
 1413              	.LCFI81:
 1414              		.cfi_def_cfa_offset 4
 1415              		.cfi_offset 7, -4
 1416 053a 83B0     		sub	sp, sp, #12
 1417              	.LCFI82:
 1418              		.cfi_def_cfa_offset 16
 1419 053c 00AF     		add	r7, sp, #0
 1420              	.LCFI83:
 1421              		.cfi_def_cfa_register 7
 1422 053e 7860     		str	r0, [r7, #4]
 781:../SPL/src/stm32f10x_sdio.c ****   /* Check the parameters */
 782:../SPL/src/stm32f10x_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 783:../SPL/src/stm32f10x_sdio.c ****    
 784:../SPL/src/stm32f10x_sdio.c ****   SDIO->ICR = SDIO_IT;
 1423              		.loc 1 784 0
 1424 0540 034B     		ldr	r3, .L97
 1425 0542 7A68     		ldr	r2, [r7, #4]
 1426 0544 9A63     		str	r2, [r3, #56]
 785:../SPL/src/stm32f10x_sdio.c **** }
 1427              		.loc 1 785 0
 1428 0546 07F10C07 		add	r7, r7, #12
 1429 054a BD46     		mov	sp, r7
 1430 054c 80BC     		pop	{r7}
 1431 054e 7047     		bx	lr
 1432              	.L98:
 1433              		.align	2
 1434              	.L97:
 1435 0550 00800140 		.word	1073840128
 1436              		.cfi_endproc
 1437              	.LFE58:
 1439              	.Letext0:
 1440              		.file 2 "/home/knik/CodeSourcery/Sourcery_CodeBench_Lite_for_ARM_EABI/bin/../lib/gcc/arm-none-eabi
 1441              		.file 3 "/home/knik/temp/workspace/stm32_ld_vl/CMSIS/stm32f10x.h"
 1442              		.file 4 "/home/knik/temp/workspace/stm32_ld_vl/SPL/inc/stm32f10x_sdio.h"
 1443              		.file 5 "/home/knik/temp/workspace/stm32_ld_vl/CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_sdio.c
     /tmp/ccqpoexk.s:18     .text:00000000 $t
     /tmp/ccqpoexk.s:23     .text:00000000 SDIO_DeInit
     /tmp/ccqpoexk.s:81     .text:00000050 $d
     /tmp/ccqpoexk.s:86     .text:00000058 $t
     /tmp/ccqpoexk.s:91     .text:00000058 SDIO_Init
     /tmp/ccqpoexk.s:162    .text:000000b4 $d
     /tmp/ccqpoexk.s:166    .text:000000b8 $t
     /tmp/ccqpoexk.s:171    .text:000000b8 SDIO_StructInit
     /tmp/ccqpoexk.s:226    .text:000000fc SDIO_ClockCmd
     /tmp/ccqpoexk.s:257    .text:00000118 $d
     /tmp/ccqpoexk.s:261    .text:0000011c $t
     /tmp/ccqpoexk.s:266    .text:0000011c SDIO_SetPowerState
     /tmp/ccqpoexk.s:305    .text:00000148 $d
     /tmp/ccqpoexk.s:309    .text:0000014c $t
     /tmp/ccqpoexk.s:314    .text:0000014c SDIO_GetPowerState
     /tmp/ccqpoexk.s:340    .text:00000160 $d
     /tmp/ccqpoexk.s:344    .text:00000164 $t
     /tmp/ccqpoexk.s:349    .text:00000164 SDIO_ITConfig
     /tmp/ccqpoexk.s:399    .text:000001a0 $d
     /tmp/ccqpoexk.s:403    .text:000001a4 $t
     /tmp/ccqpoexk.s:408    .text:000001a4 SDIO_DMACmd
     /tmp/ccqpoexk.s:439    .text:000001c0 $d
     /tmp/ccqpoexk.s:443    .text:000001c4 $t
     /tmp/ccqpoexk.s:448    .text:000001c4 SDIO_SendCommand
     /tmp/ccqpoexk.s:512    .text:00000218 $d
     /tmp/ccqpoexk.s:516    .text:0000021c $t
     /tmp/ccqpoexk.s:521    .text:0000021c SDIO_CmdStructInit
     /tmp/ccqpoexk.s:572    .text:00000258 SDIO_GetCommandResponse
     /tmp/ccqpoexk.s:598    .text:0000026c $d
     /tmp/ccqpoexk.s:602    .text:00000270 $t
     /tmp/ccqpoexk.s:607    .text:00000270 SDIO_GetResponse
     /tmp/ccqpoexk.s:645    .text:00000298 $d
     /tmp/ccqpoexk.s:649    .text:0000029c $t
     /tmp/ccqpoexk.s:654    .text:0000029c SDIO_DataConfig
     /tmp/ccqpoexk.s:722    .text:000002f4 $d
     /tmp/ccqpoexk.s:726    .text:000002f8 $t
     /tmp/ccqpoexk.s:731    .text:000002f8 SDIO_DataStructInit
     /tmp/ccqpoexk.s:786    .text:0000033c SDIO_GetDataCounter
     /tmp/ccqpoexk.s:811    .text:0000034c $d
     /tmp/ccqpoexk.s:815    .text:00000350 $t
     /tmp/ccqpoexk.s:820    .text:00000350 SDIO_ReadData
     /tmp/ccqpoexk.s:845    .text:00000364 $d
     /tmp/ccqpoexk.s:849    .text:00000368 $t
     /tmp/ccqpoexk.s:854    .text:00000368 SDIO_WriteData
     /tmp/ccqpoexk.s:884    .text:00000384 $d
     /tmp/ccqpoexk.s:888    .text:00000388 $t
     /tmp/ccqpoexk.s:893    .text:00000388 SDIO_GetFIFOCount
     /tmp/ccqpoexk.s:918    .text:00000398 $d
     /tmp/ccqpoexk.s:922    .text:0000039c $t
     /tmp/ccqpoexk.s:927    .text:0000039c SDIO_StartSDIOReadWait
     /tmp/ccqpoexk.s:958    .text:000003b8 $d
     /tmp/ccqpoexk.s:962    .text:000003bc $t
     /tmp/ccqpoexk.s:967    .text:000003bc SDIO_StopSDIOReadWait
     /tmp/ccqpoexk.s:998    .text:000003d8 $d
     /tmp/ccqpoexk.s:1002   .text:000003dc $t
     /tmp/ccqpoexk.s:1007   .text:000003dc SDIO_SetSDIOReadWaitMode
     /tmp/ccqpoexk.s:1037   .text:000003f4 $d
     /tmp/ccqpoexk.s:1041   .text:000003f8 $t
     /tmp/ccqpoexk.s:1046   .text:000003f8 SDIO_SetSDIOOperation
     /tmp/ccqpoexk.s:1077   .text:00000414 $d
     /tmp/ccqpoexk.s:1081   .text:00000418 $t
     /tmp/ccqpoexk.s:1086   .text:00000418 SDIO_SendSDIOSuspendCmd
     /tmp/ccqpoexk.s:1117   .text:00000434 $d
     /tmp/ccqpoexk.s:1121   .text:00000438 $t
     /tmp/ccqpoexk.s:1126   .text:00000438 SDIO_CommandCompletionCmd
     /tmp/ccqpoexk.s:1157   .text:00000454 $d
     /tmp/ccqpoexk.s:1161   .text:00000458 $t
     /tmp/ccqpoexk.s:1166   .text:00000458 SDIO_CEATAITCmd
     /tmp/ccqpoexk.s:1203   .text:00000480 $d
     /tmp/ccqpoexk.s:1207   .text:00000484 $t
     /tmp/ccqpoexk.s:1212   .text:00000484 SDIO_SendCEATACmd
     /tmp/ccqpoexk.s:1243   .text:000004a0 $d
     /tmp/ccqpoexk.s:1247   .text:000004a4 $t
     /tmp/ccqpoexk.s:1252   .text:000004a4 SDIO_GetFlagStatus
     /tmp/ccqpoexk.s:1300   .text:000004dc $d
     /tmp/ccqpoexk.s:1304   .text:000004e0 $t
     /tmp/ccqpoexk.s:1309   .text:000004e0 SDIO_ClearFlag
     /tmp/ccqpoexk.s:1339   .text:000004f8 $d
     /tmp/ccqpoexk.s:1343   .text:000004fc $t
     /tmp/ccqpoexk.s:1348   .text:000004fc SDIO_GetITStatus
     /tmp/ccqpoexk.s:1396   .text:00000534 $d
     /tmp/ccqpoexk.s:1400   .text:00000538 $t
     /tmp/ccqpoexk.s:1405   .text:00000538 SDIO_ClearITPendingBit
     /tmp/ccqpoexk.s:1435   .text:00000550 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.15d5e41296b380d25e233262bbc38056
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.115ebb8291fa96f8c9e0b9a9b670f703
                           .group:00000000 wm4.stm32f10x_adc.h.83.4d35a50d598070ecea6f33bcef02c922
                           .group:00000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:00000000 wm4.stm32f10x_can.h.25.48aab46fcce6d08400bf960b028e4698
                           .group:00000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:00000000 wm4.stm32f10x_dac.h.25.d946244edf026333094657d55ea894b8
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:00000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:00000000 wm4.stm32f10x_exti.h.25.b9064155c5c006b5154b39788c79001a
                           .group:00000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:00000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_i2c.h.25.7b6cbaea24c6f25f538f8516d1814cb2
                           .group:00000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:00000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:00000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:00000000 wm4.stm32f10x_spi.h.25.68b3d5ccfcf895f9fe505ce20c0c300f
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_sdio.h.123.338d8df3ea446473bd51d7b2007d9d9a

NO UNDEFINED SYMBOLS
