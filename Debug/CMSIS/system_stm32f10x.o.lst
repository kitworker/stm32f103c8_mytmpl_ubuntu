   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"system_stm32f10x.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	SystemCoreClock
  19              		.data
  20              		.align	2
  23              	SystemCoreClock:
  24 0000 00366E01 		.word	24000000
  25              		.global	AHBPrescTable
  26              		.align	2
  29              	AHBPrescTable:
  30 0004 00       		.byte	0
  31 0005 00       		.byte	0
  32 0006 00       		.byte	0
  33 0007 00       		.byte	0
  34 0008 00       		.byte	0
  35 0009 00       		.byte	0
  36 000a 00       		.byte	0
  37 000b 00       		.byte	0
  38 000c 01       		.byte	1
  39 000d 02       		.byte	2
  40 000e 03       		.byte	3
  41 000f 04       		.byte	4
  42 0010 06       		.byte	6
  43 0011 07       		.byte	7
  44 0012 08       		.byte	8
  45 0013 09       		.byte	9
  46              		.text
  47              		.align	2
  48              		.global	SystemInit
  49              		.thumb
  50              		.thumb_func
  52              	SystemInit:
  53              	.LFB29:
  54              		.file 1 "../CMSIS/system_stm32f10x.c"
   1:../CMSIS/system_stm32f10x.c **** /**
   2:../CMSIS/system_stm32f10x.c ****   ******************************************************************************
   3:../CMSIS/system_stm32f10x.c ****   * @file    system_stm32f10x.c
   4:../CMSIS/system_stm32f10x.c ****   * @author  MCD Application Team
   5:../CMSIS/system_stm32f10x.c ****   * @version V3.5.0
   6:../CMSIS/system_stm32f10x.c ****   * @date    11-March-2011
   7:../CMSIS/system_stm32f10x.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:../CMSIS/system_stm32f10x.c ****   * 
   9:../CMSIS/system_stm32f10x.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:../CMSIS/system_stm32f10x.c ****   *     user application:
  11:../CMSIS/system_stm32f10x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:../CMSIS/system_stm32f10x.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:../CMSIS/system_stm32f10x.c ****   *                      This function is called at startup just after reset and 
  14:../CMSIS/system_stm32f10x.c ****   *                      before branch to main program. This call is made inside
  15:../CMSIS/system_stm32f10x.c ****   *                      the "startup_stm32f10x_xx.s" file.
  16:../CMSIS/system_stm32f10x.c ****   *
  17:../CMSIS/system_stm32f10x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:../CMSIS/system_stm32f10x.c ****   *                                  by the user application to setup the SysTick 
  19:../CMSIS/system_stm32f10x.c ****   *                                  timer or configure other parameters.
  20:../CMSIS/system_stm32f10x.c ****   *                                     
  21:../CMSIS/system_stm32f10x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:../CMSIS/system_stm32f10x.c ****   *                                 be called whenever the core clock is changed
  23:../CMSIS/system_stm32f10x.c ****   *                                 during program execution.
  24:../CMSIS/system_stm32f10x.c ****   *
  25:../CMSIS/system_stm32f10x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:../CMSIS/system_stm32f10x.c ****   *    Then SystemInit() function is called, in "startup_stm32f10x_xx.s" file, to
  27:../CMSIS/system_stm32f10x.c ****   *    configure the system clock before to branch to main program.
  28:../CMSIS/system_stm32f10x.c ****   *
  29:../CMSIS/system_stm32f10x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  30:../CMSIS/system_stm32f10x.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  31:../CMSIS/system_stm32f10x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  32:../CMSIS/system_stm32f10x.c ****   *
  33:../CMSIS/system_stm32f10x.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depedning on
  34:../CMSIS/system_stm32f10x.c ****   *    the product used), refer to "HSE_VALUE" define in "stm32f10x.h" file. 
  35:../CMSIS/system_stm32f10x.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  36:../CMSIS/system_stm32f10x.c ****   *    are using different crystal you have to adapt the HSE value to your own
  37:../CMSIS/system_stm32f10x.c ****   *    configuration.
  38:../CMSIS/system_stm32f10x.c ****   *        
  39:../CMSIS/system_stm32f10x.c ****   ******************************************************************************
  40:../CMSIS/system_stm32f10x.c ****   * @attention
  41:../CMSIS/system_stm32f10x.c ****   *
  42:../CMSIS/system_stm32f10x.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  43:../CMSIS/system_stm32f10x.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  44:../CMSIS/system_stm32f10x.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  45:../CMSIS/system_stm32f10x.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  46:../CMSIS/system_stm32f10x.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  47:../CMSIS/system_stm32f10x.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  48:../CMSIS/system_stm32f10x.c ****   *
  49:../CMSIS/system_stm32f10x.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  50:../CMSIS/system_stm32f10x.c ****   ******************************************************************************
  51:../CMSIS/system_stm32f10x.c ****   */
  52:../CMSIS/system_stm32f10x.c **** 
  53:../CMSIS/system_stm32f10x.c **** /** @addtogroup CMSIS
  54:../CMSIS/system_stm32f10x.c ****   * @{
  55:../CMSIS/system_stm32f10x.c ****   */
  56:../CMSIS/system_stm32f10x.c **** 
  57:../CMSIS/system_stm32f10x.c **** /** @addtogroup stm32f10x_system
  58:../CMSIS/system_stm32f10x.c ****   * @{
  59:../CMSIS/system_stm32f10x.c ****   */  
  60:../CMSIS/system_stm32f10x.c ****   
  61:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Includes
  62:../CMSIS/system_stm32f10x.c ****   * @{
  63:../CMSIS/system_stm32f10x.c ****   */
  64:../CMSIS/system_stm32f10x.c **** 
  65:../CMSIS/system_stm32f10x.c **** #include "stm32f10x.h"
  66:../CMSIS/system_stm32f10x.c **** 
  67:../CMSIS/system_stm32f10x.c **** /**
  68:../CMSIS/system_stm32f10x.c ****   * @}
  69:../CMSIS/system_stm32f10x.c ****   */
  70:../CMSIS/system_stm32f10x.c **** 
  71:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_TypesDefinitions
  72:../CMSIS/system_stm32f10x.c ****   * @{
  73:../CMSIS/system_stm32f10x.c ****   */
  74:../CMSIS/system_stm32f10x.c **** 
  75:../CMSIS/system_stm32f10x.c **** /**
  76:../CMSIS/system_stm32f10x.c ****   * @}
  77:../CMSIS/system_stm32f10x.c ****   */
  78:../CMSIS/system_stm32f10x.c **** 
  79:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Defines
  80:../CMSIS/system_stm32f10x.c ****   * @{
  81:../CMSIS/system_stm32f10x.c ****   */
  82:../CMSIS/system_stm32f10x.c **** 
  83:../CMSIS/system_stm32f10x.c **** /*!< Uncomment the line corresponding to the desired System clock (SYSCLK)
  84:../CMSIS/system_stm32f10x.c ****    frequency (after reset the HSI is used as SYSCLK source)
  85:../CMSIS/system_stm32f10x.c ****    
  86:../CMSIS/system_stm32f10x.c ****    IMPORTANT NOTE:
  87:../CMSIS/system_stm32f10x.c ****    ============== 
  88:../CMSIS/system_stm32f10x.c ****    1. After each device reset the HSI is used as System clock source.
  89:../CMSIS/system_stm32f10x.c **** 
  90:../CMSIS/system_stm32f10x.c ****    2. Please make sure that the selected System clock doesn't exceed your device's
  91:../CMSIS/system_stm32f10x.c ****       maximum frequency.
  92:../CMSIS/system_stm32f10x.c ****       
  93:../CMSIS/system_stm32f10x.c ****    3. If none of the define below is enabled, the HSI is used as System clock
  94:../CMSIS/system_stm32f10x.c ****     source.
  95:../CMSIS/system_stm32f10x.c **** 
  96:../CMSIS/system_stm32f10x.c ****    4. The System clock configuration functions provided within this file assume that:
  97:../CMSIS/system_stm32f10x.c ****         - For Low, Medium and High density Value line devices an external 8MHz 
  98:../CMSIS/system_stm32f10x.c ****           crystal is used to drive the System clock.
  99:../CMSIS/system_stm32f10x.c ****         - For Low, Medium and High density devices an external 8MHz crystal is
 100:../CMSIS/system_stm32f10x.c ****           used to drive the System clock.
 101:../CMSIS/system_stm32f10x.c ****         - For Connectivity line devices an external 25MHz crystal is used to drive
 102:../CMSIS/system_stm32f10x.c ****           the System clock.
 103:../CMSIS/system_stm32f10x.c ****      If you are using different crystal you have to adapt those functions accordingly.
 104:../CMSIS/system_stm32f10x.c ****     */
 105:../CMSIS/system_stm32f10x.c ****     
 106:../CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || (defined STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 107:../CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 108:../CMSIS/system_stm32f10x.c ****  #define SYSCLK_FREQ_24MHz  24000000
 109:../CMSIS/system_stm32f10x.c **** #else
 110:../CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 111:../CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_24MHz  24000000 */ 
 112:../CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_36MHz  36000000 */
 113:../CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_48MHz  48000000 */
 114:../CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_56MHz  56000000 */
 115:../CMSIS/system_stm32f10x.c **** #define SYSCLK_FREQ_72MHz  72000000
 116:../CMSIS/system_stm32f10x.c **** #endif
 117:../CMSIS/system_stm32f10x.c **** 
 118:../CMSIS/system_stm32f10x.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 119:../CMSIS/system_stm32f10x.c ****      on STM3210E-EVAL board (STM32 High density and XL-density devices) or on 
 120:../CMSIS/system_stm32f10x.c ****      STM32100E-EVAL board (STM32 High-density value line devices) as data memory */ 
 121:../CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 122:../CMSIS/system_stm32f10x.c **** /* #define DATA_IN_ExtSRAM */
 123:../CMSIS/system_stm32f10x.c **** #endif
 124:../CMSIS/system_stm32f10x.c **** 
 125:../CMSIS/system_stm32f10x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 126:../CMSIS/system_stm32f10x.c ****      Internal SRAM. */ 
 127:../CMSIS/system_stm32f10x.c **** /* #define VECT_TAB_SRAM */
 128:../CMSIS/system_stm32f10x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 129:../CMSIS/system_stm32f10x.c ****                                   This value must be a multiple of 0x200. */
 130:../CMSIS/system_stm32f10x.c **** 
 131:../CMSIS/system_stm32f10x.c **** 
 132:../CMSIS/system_stm32f10x.c **** /**
 133:../CMSIS/system_stm32f10x.c ****   * @}
 134:../CMSIS/system_stm32f10x.c ****   */
 135:../CMSIS/system_stm32f10x.c **** 
 136:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Macros
 137:../CMSIS/system_stm32f10x.c ****   * @{
 138:../CMSIS/system_stm32f10x.c ****   */
 139:../CMSIS/system_stm32f10x.c **** 
 140:../CMSIS/system_stm32f10x.c **** /**
 141:../CMSIS/system_stm32f10x.c ****   * @}
 142:../CMSIS/system_stm32f10x.c ****   */
 143:../CMSIS/system_stm32f10x.c **** 
 144:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Variables
 145:../CMSIS/system_stm32f10x.c ****   * @{
 146:../CMSIS/system_stm32f10x.c ****   */
 147:../CMSIS/system_stm32f10x.c **** 
 148:../CMSIS/system_stm32f10x.c **** /*******************************************************************************
 149:../CMSIS/system_stm32f10x.c **** *  Clock Definitions
 150:../CMSIS/system_stm32f10x.c **** *******************************************************************************/
 151:../CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 152:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_HSE;        /*!< System Clock Frequency (Core Cloc
 153:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 154:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_24MHz;        /*!< System Clock Frequency (Core Cl
 155:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 156:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_36MHz;        /*!< System Clock Frequency (Core Cl
 157:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 158:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_48MHz;        /*!< System Clock Frequency (Core Cl
 159:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 160:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_56MHz;        /*!< System Clock Frequency (Core Cl
 161:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 162:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_72MHz;        /*!< System Clock Frequency (Core Cl
 163:../CMSIS/system_stm32f10x.c **** #else /*!< HSI Selected as System Clock source */
 164:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = HSI_VALUE;        /*!< System Clock Frequency (Core Clock) */
 165:../CMSIS/system_stm32f10x.c **** #endif
 166:../CMSIS/system_stm32f10x.c **** 
 167:../CMSIS/system_stm32f10x.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 168:../CMSIS/system_stm32f10x.c **** /**
 169:../CMSIS/system_stm32f10x.c ****   * @}
 170:../CMSIS/system_stm32f10x.c ****   */
 171:../CMSIS/system_stm32f10x.c **** 
 172:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_FunctionPrototypes
 173:../CMSIS/system_stm32f10x.c ****   * @{
 174:../CMSIS/system_stm32f10x.c ****   */
 175:../CMSIS/system_stm32f10x.c **** 
 176:../CMSIS/system_stm32f10x.c **** static void SetSysClock(void);
 177:../CMSIS/system_stm32f10x.c **** 
 178:../CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 179:../CMSIS/system_stm32f10x.c ****   static void SetSysClockToHSE(void);
 180:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 181:../CMSIS/system_stm32f10x.c ****   static void SetSysClockTo24(void);
 182:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 183:../CMSIS/system_stm32f10x.c ****   static void SetSysClockTo36(void);
 184:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 185:../CMSIS/system_stm32f10x.c ****   static void SetSysClockTo48(void);
 186:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 187:../CMSIS/system_stm32f10x.c ****   static void SetSysClockTo56(void);  
 188:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 189:../CMSIS/system_stm32f10x.c ****   static void SetSysClockTo72(void);
 190:../CMSIS/system_stm32f10x.c **** #endif
 191:../CMSIS/system_stm32f10x.c **** 
 192:../CMSIS/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 193:../CMSIS/system_stm32f10x.c ****   static void SystemInit_ExtMemCtl(void); 
 194:../CMSIS/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 195:../CMSIS/system_stm32f10x.c **** 
 196:../CMSIS/system_stm32f10x.c **** /**
 197:../CMSIS/system_stm32f10x.c ****   * @}
 198:../CMSIS/system_stm32f10x.c ****   */
 199:../CMSIS/system_stm32f10x.c **** 
 200:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Functions
 201:../CMSIS/system_stm32f10x.c ****   * @{
 202:../CMSIS/system_stm32f10x.c ****   */
 203:../CMSIS/system_stm32f10x.c **** 
 204:../CMSIS/system_stm32f10x.c **** /**
 205:../CMSIS/system_stm32f10x.c ****   * @brief  Setup the microcontroller system
 206:../CMSIS/system_stm32f10x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 207:../CMSIS/system_stm32f10x.c ****   *         SystemCoreClock variable.
 208:../CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 209:../CMSIS/system_stm32f10x.c ****   * @param  None
 210:../CMSIS/system_stm32f10x.c ****   * @retval None
 211:../CMSIS/system_stm32f10x.c ****   */
 212:../CMSIS/system_stm32f10x.c **** void SystemInit (void)
 213:../CMSIS/system_stm32f10x.c **** {
  55              		.loc 1 213 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 80B5     		push	{r7, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 7, -8
  63              		.cfi_offset 14, -4
  64 0002 00AF     		add	r7, sp, #0
  65              	.LCFI1:
  66              		.cfi_def_cfa_register 7
 214:../CMSIS/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 215:../CMSIS/system_stm32f10x.c ****   /* Set HSION bit */
 216:../CMSIS/system_stm32f10x.c ****   RCC->CR |= (uint32_t)0x00000001;
  67              		.loc 1 216 0
  68 0004 174B     		ldr	r3, .L2
  69 0006 174A     		ldr	r2, .L2
  70 0008 1268     		ldr	r2, [r2, #0]
  71 000a 42F00102 		orr	r2, r2, #1
  72 000e 1A60     		str	r2, [r3, #0]
 217:../CMSIS/system_stm32f10x.c **** 
 218:../CMSIS/system_stm32f10x.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 219:../CMSIS/system_stm32f10x.c **** #ifndef STM32F10X_CL
 220:../CMSIS/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  73              		.loc 1 220 0
  74 0010 144A     		ldr	r2, .L2
  75 0012 144B     		ldr	r3, .L2
  76 0014 5968     		ldr	r1, [r3, #4]
  77 0016 144B     		ldr	r3, .L2+4
  78 0018 0B40     		ands	r3, r3, r1
  79 001a 5360     		str	r3, [r2, #4]
 221:../CMSIS/system_stm32f10x.c **** #else
 222:../CMSIS/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 223:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */   
 224:../CMSIS/system_stm32f10x.c ****   
 225:../CMSIS/system_stm32f10x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 226:../CMSIS/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  80              		.loc 1 226 0
  81 001c 114A     		ldr	r2, .L2
  82 001e 114B     		ldr	r3, .L2
  83 0020 1B68     		ldr	r3, [r3, #0]
  84 0022 23F08473 		bic	r3, r3, #17301504
  85 0026 23F48033 		bic	r3, r3, #65536
  86 002a 1360     		str	r3, [r2, #0]
 227:../CMSIS/system_stm32f10x.c **** 
 228:../CMSIS/system_stm32f10x.c ****   /* Reset HSEBYP bit */
 229:../CMSIS/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  87              		.loc 1 229 0
  88 002c 0D4B     		ldr	r3, .L2
  89 002e 0D4A     		ldr	r2, .L2
  90 0030 1268     		ldr	r2, [r2, #0]
  91 0032 22F48022 		bic	r2, r2, #262144
  92 0036 1A60     		str	r2, [r3, #0]
 230:../CMSIS/system_stm32f10x.c **** 
 231:../CMSIS/system_stm32f10x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 232:../CMSIS/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
  93              		.loc 1 232 0
  94 0038 0A4B     		ldr	r3, .L2
  95 003a 0A4A     		ldr	r2, .L2
  96 003c 5268     		ldr	r2, [r2, #4]
  97 003e 22F4FE02 		bic	r2, r2, #8323072
  98 0042 5A60     		str	r2, [r3, #4]
 233:../CMSIS/system_stm32f10x.c **** 
 234:../CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 235:../CMSIS/system_stm32f10x.c ****   /* Reset PLL2ON and PLL3ON bits */
 236:../CMSIS/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 237:../CMSIS/system_stm32f10x.c **** 
 238:../CMSIS/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 239:../CMSIS/system_stm32f10x.c ****   RCC->CIR = 0x00FF0000;
 240:../CMSIS/system_stm32f10x.c **** 
 241:../CMSIS/system_stm32f10x.c ****   /* Reset CFGR2 register */
 242:../CMSIS/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;
 243:../CMSIS/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 244:../CMSIS/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 245:../CMSIS/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
  99              		.loc 1 245 0
 100 0044 074B     		ldr	r3, .L2
 101 0046 4FF41F02 		mov	r2, #10420224
 102 004a 9A60     		str	r2, [r3, #8]
 246:../CMSIS/system_stm32f10x.c **** 
 247:../CMSIS/system_stm32f10x.c ****   /* Reset CFGR2 register */
 248:../CMSIS/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;      
 103              		.loc 1 248 0
 104 004c 054B     		ldr	r3, .L2
 105 004e 4FF00002 		mov	r2, #0
 106 0052 DA62     		str	r2, [r3, #44]
 249:../CMSIS/system_stm32f10x.c **** #else
 250:../CMSIS/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 251:../CMSIS/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 252:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 253:../CMSIS/system_stm32f10x.c ****     
 254:../CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 255:../CMSIS/system_stm32f10x.c ****   #ifdef DATA_IN_ExtSRAM
 256:../CMSIS/system_stm32f10x.c ****     SystemInit_ExtMemCtl(); 
 257:../CMSIS/system_stm32f10x.c ****   #endif /* DATA_IN_ExtSRAM */
 258:../CMSIS/system_stm32f10x.c **** #endif 
 259:../CMSIS/system_stm32f10x.c **** 
 260:../CMSIS/system_stm32f10x.c ****   /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
 261:../CMSIS/system_stm32f10x.c ****   /* Configure the Flash Latency cycles and enable prefetch buffer */
 262:../CMSIS/system_stm32f10x.c ****   SetSysClock();
 107              		.loc 1 262 0
 108 0054 00F07EF8 		bl	SetSysClock
 263:../CMSIS/system_stm32f10x.c **** 
 264:../CMSIS/system_stm32f10x.c **** #ifdef VECT_TAB_SRAM
 265:../CMSIS/system_stm32f10x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 266:../CMSIS/system_stm32f10x.c **** #else
 267:../CMSIS/system_stm32f10x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 109              		.loc 1 267 0
 110 0058 044B     		ldr	r3, .L2+8
 111 005a 4FF00062 		mov	r2, #134217728
 112 005e 9A60     		str	r2, [r3, #8]
 268:../CMSIS/system_stm32f10x.c **** #endif 
 269:../CMSIS/system_stm32f10x.c **** }
 113              		.loc 1 269 0
 114 0060 80BD     		pop	{r7, pc}
 115              	.L3:
 116 0062 00BF     		.align	2
 117              	.L2:
 118 0064 00100240 		.word	1073876992
 119 0068 0000FFF8 		.word	-117506048
 120 006c 00ED00E0 		.word	-536810240
 121              		.cfi_endproc
 122              	.LFE29:
 124              		.align	2
 125              		.global	SystemCoreClockUpdate
 126              		.thumb
 127              		.thumb_func
 129              	SystemCoreClockUpdate:
 130              	.LFB30:
 270:../CMSIS/system_stm32f10x.c **** 
 271:../CMSIS/system_stm32f10x.c **** /**
 272:../CMSIS/system_stm32f10x.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 273:../CMSIS/system_stm32f10x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 274:../CMSIS/system_stm32f10x.c ****   *         be used by the user application to setup the SysTick timer or configure
 275:../CMSIS/system_stm32f10x.c ****   *         other parameters.
 276:../CMSIS/system_stm32f10x.c ****   *           
 277:../CMSIS/system_stm32f10x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 278:../CMSIS/system_stm32f10x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 279:../CMSIS/system_stm32f10x.c ****   *         based on this variable will be incorrect.         
 280:../CMSIS/system_stm32f10x.c ****   *     
 281:../CMSIS/system_stm32f10x.c ****   * @note   - The system frequency computed by this function is not the real 
 282:../CMSIS/system_stm32f10x.c ****   *           frequency in the chip. It is calculated based on the predefined 
 283:../CMSIS/system_stm32f10x.c ****   *           constant and the selected clock source:
 284:../CMSIS/system_stm32f10x.c ****   *             
 285:../CMSIS/system_stm32f10x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 286:../CMSIS/system_stm32f10x.c ****   *                                              
 287:../CMSIS/system_stm32f10x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 288:../CMSIS/system_stm32f10x.c ****   *                          
 289:../CMSIS/system_stm32f10x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 290:../CMSIS/system_stm32f10x.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 291:../CMSIS/system_stm32f10x.c ****   *         
 292:../CMSIS/system_stm32f10x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 293:../CMSIS/system_stm32f10x.c ****   *             8 MHz) but the real value may vary depending on the variations
 294:../CMSIS/system_stm32f10x.c ****   *             in voltage and temperature.   
 295:../CMSIS/system_stm32f10x.c ****   *    
 296:../CMSIS/system_stm32f10x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 297:../CMSIS/system_stm32f10x.c ****   *              8 MHz or 25 MHz, depedning on the product used), user has to ensure
 298:../CMSIS/system_stm32f10x.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 299:../CMSIS/system_stm32f10x.c ****   *              Otherwise, this function may have wrong result.
 300:../CMSIS/system_stm32f10x.c ****   *                
 301:../CMSIS/system_stm32f10x.c ****   *         - The result of this function could be not correct when using fractional
 302:../CMSIS/system_stm32f10x.c ****   *           value for HSE crystal.
 303:../CMSIS/system_stm32f10x.c ****   * @param  None
 304:../CMSIS/system_stm32f10x.c ****   * @retval None
 305:../CMSIS/system_stm32f10x.c ****   */
 306:../CMSIS/system_stm32f10x.c **** void SystemCoreClockUpdate (void)
 307:../CMSIS/system_stm32f10x.c **** {
 131              		.loc 1 307 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 16
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0070 80B4     		push	{r7}
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 4
 139              		.cfi_offset 7, -4
 140 0072 85B0     		sub	sp, sp, #20
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 24
 143 0074 00AF     		add	r7, sp, #0
 144              	.LCFI4:
 145              		.cfi_def_cfa_register 7
 308:../CMSIS/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 146              		.loc 1 308 0
 147 0076 4FF00003 		mov	r3, #0
 148 007a FB60     		str	r3, [r7, #12]
 149 007c 4FF00003 		mov	r3, #0
 150 0080 BB60     		str	r3, [r7, #8]
 151 0082 4FF00003 		mov	r3, #0
 152 0086 7B60     		str	r3, [r7, #4]
 309:../CMSIS/system_stm32f10x.c **** 
 310:../CMSIS/system_stm32f10x.c **** #ifdef  STM32F10X_CL
 311:../CMSIS/system_stm32f10x.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 312:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 313:../CMSIS/system_stm32f10x.c **** 
 314:../CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 315:../CMSIS/system_stm32f10x.c ****   uint32_t prediv1factor = 0;
 153              		.loc 1 315 0
 154 0088 4FF00003 		mov	r3, #0
 155 008c 3B60     		str	r3, [r7, #0]
 316:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL or STM32F10X_HD_VL */
 317:../CMSIS/system_stm32f10x.c ****     
 318:../CMSIS/system_stm32f10x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 319:../CMSIS/system_stm32f10x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 156              		.loc 1 319 0
 157 008e 2C4B     		ldr	r3, .L13
 158 0090 5B68     		ldr	r3, [r3, #4]
 159 0092 03F00C03 		and	r3, r3, #12
 160 0096 FB60     		str	r3, [r7, #12]
 320:../CMSIS/system_stm32f10x.c ****   
 321:../CMSIS/system_stm32f10x.c ****   switch (tmp)
 161              		.loc 1 321 0
 162 0098 FB68     		ldr	r3, [r7, #12]
 163 009a 042B     		cmp	r3, #4
 164 009c 07D0     		beq	.L7
 165 009e 082B     		cmp	r3, #8
 166 00a0 09D0     		beq	.L8
 167 00a2 002B     		cmp	r3, #0
 168 00a4 32D1     		bne	.L12
 169              	.L6:
 322:../CMSIS/system_stm32f10x.c ****   {
 323:../CMSIS/system_stm32f10x.c ****     case 0x00:  /* HSI used as system clock */
 324:../CMSIS/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 170              		.loc 1 324 0
 171 00a6 274B     		ldr	r3, .L13+4
 172 00a8 274A     		ldr	r2, .L13+8
 173 00aa 1A60     		str	r2, [r3, #0]
 325:../CMSIS/system_stm32f10x.c ****       break;
 174              		.loc 1 325 0
 175 00ac 32E0     		b	.L9
 176              	.L7:
 326:../CMSIS/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 327:../CMSIS/system_stm32f10x.c ****       SystemCoreClock = HSE_VALUE;
 177              		.loc 1 327 0
 178 00ae 254B     		ldr	r3, .L13+4
 179 00b0 254A     		ldr	r2, .L13+8
 180 00b2 1A60     		str	r2, [r3, #0]
 328:../CMSIS/system_stm32f10x.c ****       break;
 181              		.loc 1 328 0
 182 00b4 2EE0     		b	.L9
 183              	.L8:
 329:../CMSIS/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 330:../CMSIS/system_stm32f10x.c **** 
 331:../CMSIS/system_stm32f10x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 332:../CMSIS/system_stm32f10x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 184              		.loc 1 332 0
 185 00b6 224B     		ldr	r3, .L13
 186 00b8 5B68     		ldr	r3, [r3, #4]
 187 00ba 03F47013 		and	r3, r3, #3932160
 188 00be BB60     		str	r3, [r7, #8]
 333:../CMSIS/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 189              		.loc 1 333 0
 190 00c0 1F4B     		ldr	r3, .L13
 191 00c2 5B68     		ldr	r3, [r3, #4]
 192 00c4 03F48033 		and	r3, r3, #65536
 193 00c8 7B60     		str	r3, [r7, #4]
 334:../CMSIS/system_stm32f10x.c ****       
 335:../CMSIS/system_stm32f10x.c **** #ifndef STM32F10X_CL      
 336:../CMSIS/system_stm32f10x.c ****       pllmull = ( pllmull >> 18) + 2;
 194              		.loc 1 336 0
 195 00ca BB68     		ldr	r3, [r7, #8]
 196 00cc 4FEA9343 		lsr	r3, r3, #18
 197 00d0 03F10203 		add	r3, r3, #2
 198 00d4 BB60     		str	r3, [r7, #8]
 337:../CMSIS/system_stm32f10x.c ****       
 338:../CMSIS/system_stm32f10x.c ****       if (pllsource == 0x00)
 199              		.loc 1 338 0
 200 00d6 7B68     		ldr	r3, [r7, #4]
 201 00d8 002B     		cmp	r3, #0
 202 00da 06D1     		bne	.L10
 339:../CMSIS/system_stm32f10x.c ****       {
 340:../CMSIS/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 341:../CMSIS/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 203              		.loc 1 341 0
 204 00dc BB68     		ldr	r3, [r7, #8]
 205 00de 1B4A     		ldr	r2, .L13+12
 206 00e0 02FB03F2 		mul	r2, r2, r3
 207 00e4 174B     		ldr	r3, .L13+4
 208 00e6 1A60     		str	r2, [r3, #0]
 342:../CMSIS/system_stm32f10x.c ****       }
 343:../CMSIS/system_stm32f10x.c ****       else
 344:../CMSIS/system_stm32f10x.c ****       {
 345:../CMSIS/system_stm32f10x.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 346:../CMSIS/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 347:../CMSIS/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 348:../CMSIS/system_stm32f10x.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 349:../CMSIS/system_stm32f10x.c ****  #else
 350:../CMSIS/system_stm32f10x.c ****         /* HSE selected as PLL clock entry */
 351:../CMSIS/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 352:../CMSIS/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 353:../CMSIS/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 354:../CMSIS/system_stm32f10x.c ****         }
 355:../CMSIS/system_stm32f10x.c ****         else
 356:../CMSIS/system_stm32f10x.c ****         {
 357:../CMSIS/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 358:../CMSIS/system_stm32f10x.c ****         }
 359:../CMSIS/system_stm32f10x.c ****  #endif
 360:../CMSIS/system_stm32f10x.c ****       }
 361:../CMSIS/system_stm32f10x.c **** #else
 362:../CMSIS/system_stm32f10x.c ****       pllmull = pllmull >> 18;
 363:../CMSIS/system_stm32f10x.c ****       
 364:../CMSIS/system_stm32f10x.c ****       if (pllmull != 0x0D)
 365:../CMSIS/system_stm32f10x.c ****       {
 366:../CMSIS/system_stm32f10x.c ****          pllmull += 2;
 367:../CMSIS/system_stm32f10x.c ****       }
 368:../CMSIS/system_stm32f10x.c ****       else
 369:../CMSIS/system_stm32f10x.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 370:../CMSIS/system_stm32f10x.c ****         pllmull = 13 / 2; 
 371:../CMSIS/system_stm32f10x.c ****       }
 372:../CMSIS/system_stm32f10x.c ****             
 373:../CMSIS/system_stm32f10x.c ****       if (pllsource == 0x00)
 374:../CMSIS/system_stm32f10x.c ****       {
 375:../CMSIS/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 376:../CMSIS/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 377:../CMSIS/system_stm32f10x.c ****       }
 378:../CMSIS/system_stm32f10x.c ****       else
 379:../CMSIS/system_stm32f10x.c ****       {/* PREDIV1 selected as PLL clock entry */
 380:../CMSIS/system_stm32f10x.c ****         
 381:../CMSIS/system_stm32f10x.c ****         /* Get PREDIV1 clock source and division factor */
 382:../CMSIS/system_stm32f10x.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 383:../CMSIS/system_stm32f10x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 384:../CMSIS/system_stm32f10x.c ****         
 385:../CMSIS/system_stm32f10x.c ****         if (prediv1source == 0)
 386:../CMSIS/system_stm32f10x.c ****         { 
 387:../CMSIS/system_stm32f10x.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 388:../CMSIS/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 389:../CMSIS/system_stm32f10x.c ****         }
 390:../CMSIS/system_stm32f10x.c ****         else
 391:../CMSIS/system_stm32f10x.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 392:../CMSIS/system_stm32f10x.c ****           
 393:../CMSIS/system_stm32f10x.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 394:../CMSIS/system_stm32f10x.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
 395:../CMSIS/system_stm32f10x.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
 396:../CMSIS/system_stm32f10x.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 397:../CMSIS/system_stm32f10x.c ****         }
 398:../CMSIS/system_stm32f10x.c ****       }
 399:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */ 
 400:../CMSIS/system_stm32f10x.c ****       break;
 209              		.loc 1 400 0
 210 00e8 14E0     		b	.L9
 211              	.L10:
 346:../CMSIS/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 212              		.loc 1 346 0
 213 00ea 154B     		ldr	r3, .L13
 214 00ec DB6A     		ldr	r3, [r3, #44]
 215 00ee 03F00F03 		and	r3, r3, #15
 216 00f2 03F10103 		add	r3, r3, #1
 217 00f6 3B60     		str	r3, [r7, #0]
 348:../CMSIS/system_stm32f10x.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 218              		.loc 1 348 0
 219 00f8 134A     		ldr	r2, .L13+8
 220 00fa 3B68     		ldr	r3, [r7, #0]
 221 00fc B2FBF3F3 		udiv	r3, r2, r3
 222 0100 BA68     		ldr	r2, [r7, #8]
 223 0102 02FB03F2 		mul	r2, r2, r3
 224 0106 0F4B     		ldr	r3, .L13+4
 225 0108 1A60     		str	r2, [r3, #0]
 226              		.loc 1 400 0
 227 010a 03E0     		b	.L9
 228              	.L12:
 401:../CMSIS/system_stm32f10x.c **** 
 402:../CMSIS/system_stm32f10x.c ****     default:
 403:../CMSIS/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 229              		.loc 1 403 0
 230 010c 0D4B     		ldr	r3, .L13+4
 231 010e 0E4A     		ldr	r2, .L13+8
 232 0110 1A60     		str	r2, [r3, #0]
 404:../CMSIS/system_stm32f10x.c ****       break;
 233              		.loc 1 404 0
 234 0112 00BF     		nop
 235              	.L9:
 405:../CMSIS/system_stm32f10x.c ****   }
 406:../CMSIS/system_stm32f10x.c ****   
 407:../CMSIS/system_stm32f10x.c ****   /* Compute HCLK clock frequency ----------------*/
 408:../CMSIS/system_stm32f10x.c ****   /* Get HCLK prescaler */
 409:../CMSIS/system_stm32f10x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 236              		.loc 1 409 0
 237 0114 0A4B     		ldr	r3, .L13
 238 0116 5B68     		ldr	r3, [r3, #4]
 239 0118 03F0F003 		and	r3, r3, #240
 240 011c 4FEA1313 		lsr	r3, r3, #4
 241 0120 0B4A     		ldr	r2, .L13+16
 242 0122 D35C     		ldrb	r3, [r2, r3]
 243 0124 DBB2     		uxtb	r3, r3
 244 0126 FB60     		str	r3, [r7, #12]
 410:../CMSIS/system_stm32f10x.c ****   /* HCLK clock frequency */
 411:../CMSIS/system_stm32f10x.c ****   SystemCoreClock >>= tmp;  
 245              		.loc 1 411 0
 246 0128 064B     		ldr	r3, .L13+4
 247 012a 1A68     		ldr	r2, [r3, #0]
 248 012c FB68     		ldr	r3, [r7, #12]
 249 012e 22FA03F2 		lsr	r2, r2, r3
 250 0132 044B     		ldr	r3, .L13+4
 251 0134 1A60     		str	r2, [r3, #0]
 412:../CMSIS/system_stm32f10x.c **** }
 252              		.loc 1 412 0
 253 0136 07F11407 		add	r7, r7, #20
 254 013a BD46     		mov	sp, r7
 255 013c 80BC     		pop	{r7}
 256 013e 7047     		bx	lr
 257              	.L14:
 258              		.align	2
 259              	.L13:
 260 0140 00100240 		.word	1073876992
 261 0144 00000000 		.word	SystemCoreClock
 262 0148 00127A00 		.word	8000000
 263 014c 00093D00 		.word	4000000
 264 0150 00000000 		.word	AHBPrescTable
 265              		.cfi_endproc
 266              	.LFE30:
 268              		.align	2
 269              		.thumb
 270              		.thumb_func
 272              	SetSysClock:
 273              	.LFB31:
 413:../CMSIS/system_stm32f10x.c **** 
 414:../CMSIS/system_stm32f10x.c **** /**
 415:../CMSIS/system_stm32f10x.c ****   * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
 416:../CMSIS/system_stm32f10x.c ****   * @param  None
 417:../CMSIS/system_stm32f10x.c ****   * @retval None
 418:../CMSIS/system_stm32f10x.c ****   */
 419:../CMSIS/system_stm32f10x.c **** static void SetSysClock(void)
 420:../CMSIS/system_stm32f10x.c **** {
 274              		.loc 1 420 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 0154 80B5     		push	{r7, lr}
 279              	.LCFI5:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0156 00AF     		add	r7, sp, #0
 284              	.LCFI6:
 285              		.cfi_def_cfa_register 7
 421:../CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 422:../CMSIS/system_stm32f10x.c ****   SetSysClockToHSE();
 423:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 424:../CMSIS/system_stm32f10x.c ****   SetSysClockTo24();
 286              		.loc 1 424 0
 287 0158 00F002F8 		bl	SetSysClockTo24
 425:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 426:../CMSIS/system_stm32f10x.c ****   SetSysClockTo36();
 427:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 428:../CMSIS/system_stm32f10x.c ****   SetSysClockTo48();
 429:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 430:../CMSIS/system_stm32f10x.c ****   SetSysClockTo56();  
 431:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 432:../CMSIS/system_stm32f10x.c ****   SetSysClockTo72();
 433:../CMSIS/system_stm32f10x.c **** #endif
 434:../CMSIS/system_stm32f10x.c ****  
 435:../CMSIS/system_stm32f10x.c ****  /* If none of the define above is enabled, the HSI is used as System clock
 436:../CMSIS/system_stm32f10x.c ****     source (default after reset) */ 
 437:../CMSIS/system_stm32f10x.c **** }
 288              		.loc 1 437 0
 289 015c 80BD     		pop	{r7, pc}
 290              		.cfi_endproc
 291              	.LFE31:
 293 015e 00BF     		.align	2
 294              		.thumb
 295              		.thumb_func
 297              	SetSysClockTo24:
 298              	.LFB32:
 438:../CMSIS/system_stm32f10x.c **** 
 439:../CMSIS/system_stm32f10x.c **** /**
 440:../CMSIS/system_stm32f10x.c ****   * @brief  Setup the external memory controller. Called in startup_stm32f10x.s 
 441:../CMSIS/system_stm32f10x.c ****   *          before jump to __main
 442:../CMSIS/system_stm32f10x.c ****   * @param  None
 443:../CMSIS/system_stm32f10x.c ****   * @retval None
 444:../CMSIS/system_stm32f10x.c ****   */ 
 445:../CMSIS/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 446:../CMSIS/system_stm32f10x.c **** /**
 447:../CMSIS/system_stm32f10x.c ****   * @brief  Setup the external memory controller. 
 448:../CMSIS/system_stm32f10x.c ****   *         Called in startup_stm32f10x_xx.s/.c before jump to main.
 449:../CMSIS/system_stm32f10x.c ****   * 	      This function configures the external SRAM mounted on STM3210E-EVAL
 450:../CMSIS/system_stm32f10x.c ****   *         board (STM32 High density devices). This SRAM will be used as program
 451:../CMSIS/system_stm32f10x.c ****   *         data memory (including heap and stack).
 452:../CMSIS/system_stm32f10x.c ****   * @param  None
 453:../CMSIS/system_stm32f10x.c ****   * @retval None
 454:../CMSIS/system_stm32f10x.c ****   */ 
 455:../CMSIS/system_stm32f10x.c **** void SystemInit_ExtMemCtl(void) 
 456:../CMSIS/system_stm32f10x.c **** {
 457:../CMSIS/system_stm32f10x.c **** /*!< FSMC Bank1 NOR/SRAM3 is used for the STM3210E-EVAL, if another Bank is 
 458:../CMSIS/system_stm32f10x.c ****   required, then adjust the Register Addresses */
 459:../CMSIS/system_stm32f10x.c **** 
 460:../CMSIS/system_stm32f10x.c ****   /* Enable FSMC clock */
 461:../CMSIS/system_stm32f10x.c ****   RCC->AHBENR = 0x00000114;
 462:../CMSIS/system_stm32f10x.c ****   
 463:../CMSIS/system_stm32f10x.c ****   /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */  
 464:../CMSIS/system_stm32f10x.c ****   RCC->APB2ENR = 0x000001E0;
 465:../CMSIS/system_stm32f10x.c ****   
 466:../CMSIS/system_stm32f10x.c **** /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/
 467:../CMSIS/system_stm32f10x.c **** /*----------------  SRAM Address lines configuration -------------------------*/
 468:../CMSIS/system_stm32f10x.c **** /*----------------  NOE and NWE configuration --------------------------------*/  
 469:../CMSIS/system_stm32f10x.c **** /*----------------  NE3 configuration ----------------------------------------*/
 470:../CMSIS/system_stm32f10x.c **** /*----------------  NBL0, NBL1 configuration ---------------------------------*/
 471:../CMSIS/system_stm32f10x.c ****   
 472:../CMSIS/system_stm32f10x.c ****   GPIOD->CRL = 0x44BB44BB;  
 473:../CMSIS/system_stm32f10x.c ****   GPIOD->CRH = 0xBBBBBBBB;
 474:../CMSIS/system_stm32f10x.c **** 
 475:../CMSIS/system_stm32f10x.c ****   GPIOE->CRL = 0xB44444BB;  
 476:../CMSIS/system_stm32f10x.c ****   GPIOE->CRH = 0xBBBBBBBB;
 477:../CMSIS/system_stm32f10x.c **** 
 478:../CMSIS/system_stm32f10x.c ****   GPIOF->CRL = 0x44BBBBBB;  
 479:../CMSIS/system_stm32f10x.c ****   GPIOF->CRH = 0xBBBB4444;
 480:../CMSIS/system_stm32f10x.c **** 
 481:../CMSIS/system_stm32f10x.c ****   GPIOG->CRL = 0x44BBBBBB;  
 482:../CMSIS/system_stm32f10x.c ****   GPIOG->CRH = 0x44444B44;
 483:../CMSIS/system_stm32f10x.c ****    
 484:../CMSIS/system_stm32f10x.c **** /*----------------  FSMC Configuration ---------------------------------------*/  
 485:../CMSIS/system_stm32f10x.c **** /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/
 486:../CMSIS/system_stm32f10x.c ****   
 487:../CMSIS/system_stm32f10x.c ****   FSMC_Bank1->BTCR[4] = 0x00001011;
 488:../CMSIS/system_stm32f10x.c ****   FSMC_Bank1->BTCR[5] = 0x00000200;
 489:../CMSIS/system_stm32f10x.c **** }
 490:../CMSIS/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 491:../CMSIS/system_stm32f10x.c **** 
 492:../CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 493:../CMSIS/system_stm32f10x.c **** /**
 494:../CMSIS/system_stm32f10x.c ****   * @brief  Selects HSE as System clock source and configure HCLK, PCLK2
 495:../CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 496:../CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 497:../CMSIS/system_stm32f10x.c ****   * @param  None
 498:../CMSIS/system_stm32f10x.c ****   * @retval None
 499:../CMSIS/system_stm32f10x.c ****   */
 500:../CMSIS/system_stm32f10x.c **** static void SetSysClockToHSE(void)
 501:../CMSIS/system_stm32f10x.c **** {
 502:../CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 503:../CMSIS/system_stm32f10x.c ****   
 504:../CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 505:../CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 506:../CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 507:../CMSIS/system_stm32f10x.c ****  
 508:../CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 509:../CMSIS/system_stm32f10x.c ****   do
 510:../CMSIS/system_stm32f10x.c ****   {
 511:../CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 512:../CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 513:../CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 514:../CMSIS/system_stm32f10x.c **** 
 515:../CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 516:../CMSIS/system_stm32f10x.c ****   {
 517:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 518:../CMSIS/system_stm32f10x.c ****   }
 519:../CMSIS/system_stm32f10x.c ****   else
 520:../CMSIS/system_stm32f10x.c ****   {
 521:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 522:../CMSIS/system_stm32f10x.c ****   }  
 523:../CMSIS/system_stm32f10x.c **** 
 524:../CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 525:../CMSIS/system_stm32f10x.c ****   {
 526:../CMSIS/system_stm32f10x.c **** 
 527:../CMSIS/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL
 528:../CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 529:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 530:../CMSIS/system_stm32f10x.c **** 
 531:../CMSIS/system_stm32f10x.c ****     /* Flash 0 wait state */
 532:../CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 533:../CMSIS/system_stm32f10x.c **** 
 534:../CMSIS/system_stm32f10x.c **** #ifndef STM32F10X_CL
 535:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 536:../CMSIS/system_stm32f10x.c **** #else
 537:../CMSIS/system_stm32f10x.c ****     if (HSE_VALUE <= 24000000)
 538:../CMSIS/system_stm32f10x.c **** 	{
 539:../CMSIS/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 540:../CMSIS/system_stm32f10x.c **** 	}
 541:../CMSIS/system_stm32f10x.c **** 	else
 542:../CMSIS/system_stm32f10x.c **** 	{
 543:../CMSIS/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;
 544:../CMSIS/system_stm32f10x.c **** 	}
 545:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 546:../CMSIS/system_stm32f10x.c **** #endif
 547:../CMSIS/system_stm32f10x.c ****  
 548:../CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 549:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 550:../CMSIS/system_stm32f10x.c ****       
 551:../CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 552:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 553:../CMSIS/system_stm32f10x.c ****     
 554:../CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 555:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 556:../CMSIS/system_stm32f10x.c ****     
 557:../CMSIS/system_stm32f10x.c ****     /* Select HSE as system clock source */
 558:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 559:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_HSE;    
 560:../CMSIS/system_stm32f10x.c **** 
 561:../CMSIS/system_stm32f10x.c ****     /* Wait till HSE is used as system clock source */
 562:../CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x04)
 563:../CMSIS/system_stm32f10x.c ****     {
 564:../CMSIS/system_stm32f10x.c ****     }
 565:../CMSIS/system_stm32f10x.c ****   }
 566:../CMSIS/system_stm32f10x.c ****   else
 567:../CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 568:../CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 569:../CMSIS/system_stm32f10x.c ****   }  
 570:../CMSIS/system_stm32f10x.c **** }
 571:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 572:../CMSIS/system_stm32f10x.c **** /**
 573:../CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 24MHz and configure HCLK, PCLK2 
 574:../CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 575:../CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 576:../CMSIS/system_stm32f10x.c ****   * @param  None
 577:../CMSIS/system_stm32f10x.c ****   * @retval None
 578:../CMSIS/system_stm32f10x.c ****   */
 579:../CMSIS/system_stm32f10x.c **** static void SetSysClockTo24(void)
 580:../CMSIS/system_stm32f10x.c **** {
 299              		.loc 1 580 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0160 80B4     		push	{r7}
 305              	.LCFI7:
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 7, -4
 308 0162 83B0     		sub	sp, sp, #12
 309              	.LCFI8:
 310              		.cfi_def_cfa_offset 16
 311 0164 00AF     		add	r7, sp, #0
 312              	.LCFI9:
 313              		.cfi_def_cfa_register 7
 581:../CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 314              		.loc 1 581 0
 315 0166 4FF00003 		mov	r3, #0
 316 016a 7B60     		str	r3, [r7, #4]
 317 016c 4FF00003 		mov	r3, #0
 318 0170 3B60     		str	r3, [r7, #0]
 582:../CMSIS/system_stm32f10x.c ****   
 583:../CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 584:../CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 585:../CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 319              		.loc 1 585 0
 320 0172 314B     		ldr	r3, .L24
 321 0174 304A     		ldr	r2, .L24
 322 0176 1268     		ldr	r2, [r2, #0]
 323 0178 42F48032 		orr	r2, r2, #65536
 324 017c 1A60     		str	r2, [r3, #0]
 325              	.L18:
 586:../CMSIS/system_stm32f10x.c ****  
 587:../CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 588:../CMSIS/system_stm32f10x.c ****   do
 589:../CMSIS/system_stm32f10x.c ****   {
 590:../CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 326              		.loc 1 590 0 discriminator 1
 327 017e 2E4B     		ldr	r3, .L24
 328 0180 1B68     		ldr	r3, [r3, #0]
 329 0182 03F40033 		and	r3, r3, #131072
 330 0186 3B60     		str	r3, [r7, #0]
 591:../CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 331              		.loc 1 591 0 discriminator 1
 332 0188 7B68     		ldr	r3, [r7, #4]
 333 018a 03F10103 		add	r3, r3, #1
 334 018e 7B60     		str	r3, [r7, #4]
 592:../CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 335              		.loc 1 592 0 discriminator 1
 336 0190 3B68     		ldr	r3, [r7, #0]
 337 0192 002B     		cmp	r3, #0
 338 0194 03D1     		bne	.L17
 339 0196 7B68     		ldr	r3, [r7, #4]
 340 0198 B3F5A06F 		cmp	r3, #1280
 341 019c EFD1     		bne	.L18
 342              	.L17:
 593:../CMSIS/system_stm32f10x.c **** 
 594:../CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 343              		.loc 1 594 0
 344 019e 264B     		ldr	r3, .L24
 345 01a0 1B68     		ldr	r3, [r3, #0]
 346 01a2 03F40033 		and	r3, r3, #131072
 347 01a6 002B     		cmp	r3, #0
 348 01a8 03D0     		beq	.L19
 595:../CMSIS/system_stm32f10x.c ****   {
 596:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 349              		.loc 1 596 0
 350 01aa 4FF00103 		mov	r3, #1
 351 01ae 3B60     		str	r3, [r7, #0]
 352 01b0 02E0     		b	.L20
 353              	.L19:
 597:../CMSIS/system_stm32f10x.c ****   }
 598:../CMSIS/system_stm32f10x.c ****   else
 599:../CMSIS/system_stm32f10x.c ****   {
 600:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 354              		.loc 1 600 0
 355 01b2 4FF00003 		mov	r3, #0
 356 01b6 3B60     		str	r3, [r7, #0]
 357              	.L20:
 601:../CMSIS/system_stm32f10x.c ****   }  
 602:../CMSIS/system_stm32f10x.c **** 
 603:../CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 358              		.loc 1 603 0
 359 01b8 3B68     		ldr	r3, [r7, #0]
 360 01ba 012B     		cmp	r3, #1
 361 01bc 37D1     		bne	.L16
 604:../CMSIS/system_stm32f10x.c ****   {
 605:../CMSIS/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL 
 606:../CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 607:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 608:../CMSIS/system_stm32f10x.c **** 
 609:../CMSIS/system_stm32f10x.c ****     /* Flash 0 wait state */
 610:../CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 611:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;    
 612:../CMSIS/system_stm32f10x.c **** #endif
 613:../CMSIS/system_stm32f10x.c ****  
 614:../CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 615:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 362              		.loc 1 615 0
 363 01be 1E4B     		ldr	r3, .L24
 364 01c0 1D4A     		ldr	r2, .L24
 365 01c2 5268     		ldr	r2, [r2, #4]
 366 01c4 5A60     		str	r2, [r3, #4]
 616:../CMSIS/system_stm32f10x.c ****       
 617:../CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 618:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 367              		.loc 1 618 0
 368 01c6 1C4B     		ldr	r3, .L24
 369 01c8 1B4A     		ldr	r2, .L24
 370 01ca 5268     		ldr	r2, [r2, #4]
 371 01cc 5A60     		str	r2, [r3, #4]
 619:../CMSIS/system_stm32f10x.c ****     
 620:../CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 621:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 372              		.loc 1 621 0
 373 01ce 1A4B     		ldr	r3, .L24
 374 01d0 194A     		ldr	r2, .L24
 375 01d2 5268     		ldr	r2, [r2, #4]
 376 01d4 5A60     		str	r2, [r3, #4]
 622:../CMSIS/system_stm32f10x.c ****     
 623:../CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 624:../CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 625:../CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 24 MHz */ 
 626:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 627:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 628:../CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 629:../CMSIS/system_stm32f10x.c **** 
 630:../CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 631:../CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */       
 632:../CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 633:../CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 634:../CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 635:../CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 636:../CMSIS/system_stm32f10x.c ****   
 637:../CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 638:../CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 639:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 640:../CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 641:../CMSIS/system_stm32f10x.c ****     {
 642:../CMSIS/system_stm32f10x.c ****     }   
 643:../CMSIS/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 644:../CMSIS/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 645:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 377              		.loc 1 645 0
 378 01d6 184B     		ldr	r3, .L24
 379 01d8 174A     		ldr	r2, .L24
 380 01da 5268     		ldr	r2, [r2, #4]
 381 01dc 22F47C12 		bic	r2, r2, #4128768
 382 01e0 5A60     		str	r2, [r3, #4]
 646:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
 383              		.loc 1 646 0
 384 01e2 154B     		ldr	r3, .L24
 385 01e4 144A     		ldr	r2, .L24
 386 01e6 5268     		ldr	r2, [r2, #4]
 387 01e8 42F49812 		orr	r2, r2, #1245184
 388 01ec 5A60     		str	r2, [r3, #4]
 647:../CMSIS/system_stm32f10x.c **** #else    
 648:../CMSIS/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 649:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 650:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL6);
 651:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 652:../CMSIS/system_stm32f10x.c **** 
 653:../CMSIS/system_stm32f10x.c ****     /* Enable PLL */
 654:../CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 389              		.loc 1 654 0
 390 01ee 124B     		ldr	r3, .L24
 391 01f0 114A     		ldr	r2, .L24
 392 01f2 1268     		ldr	r2, [r2, #0]
 393 01f4 42F08072 		orr	r2, r2, #16777216
 394 01f8 1A60     		str	r2, [r3, #0]
 655:../CMSIS/system_stm32f10x.c **** 
 656:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 657:../CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 395              		.loc 1 657 0
 396 01fa 00BF     		nop
 397              	.L22:
 398              		.loc 1 657 0 is_stmt 0 discriminator 1
 399 01fc 0E4B     		ldr	r3, .L24
 400 01fe 1B68     		ldr	r3, [r3, #0]
 401 0200 03F00073 		and	r3, r3, #33554432
 402 0204 002B     		cmp	r3, #0
 403 0206 F9D0     		beq	.L22
 658:../CMSIS/system_stm32f10x.c ****     {
 659:../CMSIS/system_stm32f10x.c ****     }
 660:../CMSIS/system_stm32f10x.c **** 
 661:../CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 662:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 404              		.loc 1 662 0 is_stmt 1
 405 0208 0B4B     		ldr	r3, .L24
 406 020a 0B4A     		ldr	r2, .L24
 407 020c 5268     		ldr	r2, [r2, #4]
 408 020e 22F00302 		bic	r2, r2, #3
 409 0212 5A60     		str	r2, [r3, #4]
 663:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 410              		.loc 1 663 0
 411 0214 084B     		ldr	r3, .L24
 412 0216 084A     		ldr	r2, .L24
 413 0218 5268     		ldr	r2, [r2, #4]
 414 021a 42F00202 		orr	r2, r2, #2
 415 021e 5A60     		str	r2, [r3, #4]
 664:../CMSIS/system_stm32f10x.c **** 
 665:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 666:../CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 416              		.loc 1 666 0
 417 0220 00BF     		nop
 418              	.L23:
 419              		.loc 1 666 0 is_stmt 0 discriminator 1
 420 0222 054B     		ldr	r3, .L24
 421 0224 5B68     		ldr	r3, [r3, #4]
 422 0226 03F00C03 		and	r3, r3, #12
 423 022a 082B     		cmp	r3, #8
 424 022c F9D1     		bne	.L23
 425              	.L16:
 667:../CMSIS/system_stm32f10x.c ****     {
 668:../CMSIS/system_stm32f10x.c ****     }
 669:../CMSIS/system_stm32f10x.c ****   }
 670:../CMSIS/system_stm32f10x.c ****   else
 671:../CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 672:../CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 673:../CMSIS/system_stm32f10x.c ****   } 
 674:../CMSIS/system_stm32f10x.c **** }
 426              		.loc 1 674 0 is_stmt 1
 427 022e 07F10C07 		add	r7, r7, #12
 428 0232 BD46     		mov	sp, r7
 429 0234 80BC     		pop	{r7}
 430 0236 7047     		bx	lr
 431              	.L25:
 432              		.align	2
 433              	.L24:
 434 0238 00100240 		.word	1073876992
 435              		.cfi_endproc
 436              	.LFE32:
 438              	.Letext0:
 439              		.file 2 "/home/knik/CodeSourcery/Sourcery_CodeBench_Lite_for_ARM_EABI/bin/../lib/gcc/arm-none-eabi
 440              		.file 3 "../CMSIS/core_cm3.h"
 441              		.file 4 "../CMSIS/stm32f10x.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f10x.c
     /tmp/ccqnEqWt.s:23     .data:00000000 SystemCoreClock
     /tmp/ccqnEqWt.s:20     .data:00000000 $d
     /tmp/ccqnEqWt.s:29     .data:00000004 AHBPrescTable
     /tmp/ccqnEqWt.s:47     .text:00000000 $t
     /tmp/ccqnEqWt.s:52     .text:00000000 SystemInit
     /tmp/ccqnEqWt.s:272    .text:00000154 SetSysClock
     /tmp/ccqnEqWt.s:118    .text:00000064 $d
     /tmp/ccqnEqWt.s:124    .text:00000070 $t
     /tmp/ccqnEqWt.s:129    .text:00000070 SystemCoreClockUpdate
     /tmp/ccqnEqWt.s:260    .text:00000140 $d
     /tmp/ccqnEqWt.s:268    .text:00000154 $t
     /tmp/ccqnEqWt.s:297    .text:00000160 SetSysClockTo24
     /tmp/ccqnEqWt.s:434    .text:00000238 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.15d5e41296b380d25e233262bbc38056
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.115ebb8291fa96f8c9e0b9a9b670f703
                           .group:00000000 wm4.stm32f10x_adc.h.83.4d35a50d598070ecea6f33bcef02c922
                           .group:00000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:00000000 wm4.stm32f10x_can.h.25.48aab46fcce6d08400bf960b028e4698
                           .group:00000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:00000000 wm4.stm32f10x_dac.h.25.d946244edf026333094657d55ea894b8
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:00000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:00000000 wm4.stm32f10x_exti.h.25.b9064155c5c006b5154b39788c79001a
                           .group:00000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:00000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_i2c.h.25.7b6cbaea24c6f25f538f8516d1814cb2
                           .group:00000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:00000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:00000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:00000000 wm4.stm32f10x_sdio.h.25.1fb5280a7690ef99070096bf8c866b3a
                           .group:00000000 wm4.stm32f10x_spi.h.25.68b3d5ccfcf895f9fe505ce20c0c300f
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe

NO UNDEFINED SYMBOLS
